{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import{Layout,Card,Button,message,Space,Typography,Divider,Switch,Tooltip,Dropdown}from'antd';import{ReloadOutlined,ClearOutlined,BarChartOutlined,ClockCircleOutlined,CheckCircleOutlined,DownloadOutlined}from'@ant-design/icons';import{exportToExcel,exportToCSV}from'./utils/exportUtils';import StatsCards from'./components/StatsCards';import SearchBox from'./components/SearchBox';import StockTable from'./components/StockTable';import{apiService}from'./services/api';import{handleApiError}from'./utils/helpers';import{frontendCache}from'./utils/cache';import{stockCache,CACHE_KEYS}from'./utils/stockCache';import'./styles/global.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Header,Content}=Layout;const{Title,Text}=Typography;const App=()=>{const[stocks,setStocks]=useState([]);const[loading,setLoading]=useState(false);const[refreshing,setRefreshing]=useState(false);const[apiStats,setApiStats]=useState(null);const[lastUpdateTime,setLastUpdateTime]=useState(null);const[isFromCache,setIsFromCache]=useState(false);const[autoRefresh,setAutoRefresh]=useState(true);const autoRefreshTimerRef=useRef(null);// 获取关注列表 - 集成智能缓存\nconst fetchWatchlist=useCallback(async function(){let showLoading=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;let forceRefresh=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(showLoading)setLoading(true);try{// 如果不是强制刷新，先尝试从缓存获取数据\nif(!forceRefresh){const cacheInfo=stockCache.getCacheInfo(CACHE_KEYS.WATCHLIST);if(cacheInfo){console.log('使用缓存的关注列表数据');setStocks(cacheInfo.data);setLastUpdateTime(cacheInfo.timestamp);setIsFromCache(true);if(showLoading)setLoading(false);// 后台静默更新\nsetTimeout(()=>{fetchWatchlistFromApi(false);},100);return;}}// 从API获取数据\nawait fetchWatchlistFromApi(showLoading);}catch(error){console.error('获取关注列表失败:',error);message.error(handleApiError(error));if(showLoading)setLoading(false);}},[]);// 从API获取关注列表数据\nconst fetchWatchlistFromApi=async function(){let showLoading=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;try{const response=await apiService.getWatchlist(true);// 强制从API获取\nif(response.success&&response.data){setStocks(response.data);const now=Date.now();setLastUpdateTime(now);setIsFromCache(false);// 缓存数据\nstockCache.set(CACHE_KEYS.WATCHLIST,response.data);console.log('从API获取关注列表数据并已缓存');}else{message.error('获取关注列表失败');}}catch(error){console.error('从API获取关注列表失败:',error);throw error;}finally{if(showLoading)setLoading(false);}};// 获取API统计信息\nconst fetchApiStats=useCallback(async()=>{try{const response=await apiService.getApiStats();if(response.success&&response.data){setApiStats(response.data);}}catch(error){console.error('获取API统计失败:',error);}},[]);// 添加股票到关注列表\nconst handleAddStock=async stock=>{try{const response=await apiService.addToWatchlist(stock.code);if(response.success){message.success(`已添加 ${stock.name} 到关注列表`);// 清除缓存并强制刷新关注列表\nstockCache.remove(CACHE_KEYS.WATCHLIST);await fetchWatchlistFromApi(false);await fetchApiStats();// 同时更新统计信息\n}else{message.error(response.message||'添加失败');}}catch(error){console.error('添加股票失败:',error);message.error(handleApiError(error));}};// 从关注列表移除股票\nconst handleRemoveStock=async code=>{try{const response=await apiService.removeFromWatchlist(code);if(response.success){// 清除缓存并强制刷新关注列表\nstockCache.remove(CACHE_KEYS.WATCHLIST);await fetchWatchlistFromApi(false);await fetchApiStats();// 同时更新统计信息\nmessage.success('股票已从关注列表移除');}else{message.error(response.message||'移除失败');}}catch(error){console.error('移除股票失败:',error);message.error(handleApiError(error));}};// 刷新数据\nconst handleRefresh=async()=>{setRefreshing(true);try{// 强制刷新所有数据\nawait Promise.all([fetchWatchlistFromApi(false),fetchApiStats()]);message.success('数据已更新');}catch(error){message.error('刷新失败');}finally{setRefreshing(false);}};// 清空缓存\nconst handleClearCache=async()=>{try{// 清空前端缓存\nfrontendCache.clear();stockCache.clear();// 清空后端缓存\nconst response=await apiService.clearCache();if(response.success){message.success('前端和后端缓存已清空');await fetchWatchlistFromApi(false);await fetchApiStats();}else{message.warning('后端缓存清空失败，但前端缓存已清空');await fetchWatchlistFromApi(false);await fetchApiStats();}}catch(error){console.error('清空缓存失败:',error);// 即使后端清空失败，前端缓存也已清空\nmessage.warning('前端缓存已清空，后端缓存清空失败');await fetchWatchlistFromApi(false);await fetchApiStats();}};// 组件挂载时获取数据 - 优化加载策略\nuseEffect(()=>{const initData=async()=>{// 先加载关键数据（关注列表）\nawait fetchWatchlist();// 然后异步加载统计信息（非关键数据）\nsetTimeout(()=>{fetchApiStats();},100);};initData();},[fetchWatchlist,fetchApiStats]);// 检查是否为交易时间\nconst isTradingTime=useCallback(()=>{const now=new Date();const day=now.getDay();// 0=周日, 1=周一, ..., 6=周六\nconst hour=now.getHours();const minute=now.getMinutes();const timeInMinutes=hour*60+minute;// 非工作日\nif(day===0||day===6){return false;}// 上午交易时间：9:30-11:30\nconst morningStart=9*60+30;// 9:30\nconst morningEnd=11*60+30;// 11:30\n// 下午交易时间：13:00-15:00\nconst afternoonStart=13*60;// 13:00\nconst afternoonEnd=15*60;// 15:00\nreturn timeInMinutes>=morningStart&&timeInMinutes<=morningEnd||timeInMinutes>=afternoonStart&&timeInMinutes<=afternoonEnd;},[]);// 自动刷新数据\nuseEffect(()=>{// 清除现有的定时器\nif(autoRefreshTimerRef.current){clearInterval(autoRefreshTimerRef.current);autoRefreshTimerRef.current=null;}// 如果自动刷新开启，则设置定时器\nif(autoRefresh){autoRefreshTimerRef.current=setInterval(()=>{// 只在交易时间内自动刷新\nif(isTradingTime()){console.log('交易时间内自动刷新数据');fetchWatchlist(false);}else{console.log('非交易时间，跳过自动刷新');}},2*60*1000);// 交易时间内每2分钟刷新一次\n}return()=>{if(autoRefreshTimerRef.current){clearInterval(autoRefreshTimerRef.current);}};},[fetchWatchlist,autoRefresh,isTradingTime]);return/*#__PURE__*/_jsxs(Layout,{style:{minHeight:'100vh',background:'#1a1d29'},children:[/*#__PURE__*/_jsxs(Header,{style:{background:'#2a2d3a',borderBottom:'1px solid #3a3d4a',padding:'0 24px',display:'flex',alignItems:'center',justifyContent:'space-between',height:'70px',// 增加头部高度\nlineHeight:'normal'// 重置行高，避免影响内部元素\n},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(BarChartOutlined,{style:{fontSize:'1.5rem',color:'#667eea',marginRight:12}}),/*#__PURE__*/_jsx(Title,{level:3,style:{margin:0,color:'#ffffff'},children:\"\\u80A1\\u7968\\u6570\\u636E\\u770B\\u677F\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:16},children:[/*#__PURE__*/_jsx(SearchBox,{onSelectStock:handleAddStock,onAddStock:handleAddStock}),lastUpdateTime&&/*#__PURE__*/_jsx(Tooltip,{title:\"\\u70B9\\u51FB\\u5237\\u65B0\\u6570\\u636E\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:8,padding:'4px 12px',background:isFromCache?'#3a2d1a':'#1a2d3a',borderRadius:'6px',border:`1px solid ${isFromCache?'#4a3d2a':'#2a3d4a'}`,cursor:'pointer',transition:'all 0.3s'},onClick:handleRefresh,children:[isFromCache?/*#__PURE__*/_jsx(ClockCircleOutlined,{style:{color:'#f59e0b',fontSize:'12px'}}):/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{color:'#10b981',fontSize:'12px'}}),/*#__PURE__*/_jsx(Text,{style:{color:isFromCache?'#f59e0b':'#10b981',fontSize:'12px',fontWeight:500},children:isFromCache?'缓存数据':'最新数据'}),/*#__PURE__*/_jsx(Text,{style:{color:'#8b8d97',fontSize:'11px'},children:stockCache.formatTimestamp(lastUpdateTime)})]})}),/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"default\",icon:/*#__PURE__*/_jsx(ReloadOutlined,{spin:refreshing}),onClick:handleRefresh,loading:refreshing,size:\"small\",style:{background:'#2a2d3a',borderColor:'#3a3d4a',color:'#ffffff'},children:\"\\u624B\\u52A8\\u5237\\u65B0\"}),/*#__PURE__*/_jsx(Button,{type:\"default\",icon:/*#__PURE__*/_jsx(ClearOutlined,{}),onClick:handleClearCache,size:\"small\",style:{background:'#2a2d3a',borderColor:'#3a3d4a',color:'#ffffff'},children:\"\\u6E05\\u7A7A\\u7F13\\u5B58\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:8,padding:'4px 8px',background:'#2a2d3a',borderRadius:'6px',border:'1px solid #3a3d4a'},children:[/*#__PURE__*/_jsx(Text,{style:{color:'#ffffff',fontSize:'12px'},children:\"\\u81EA\\u52A8\\u5237\\u65B0:\"}),/*#__PURE__*/_jsx(Switch,{size:\"small\",checked:autoRefresh,onChange:setAutoRefresh,checkedChildren:\"\\u5F00\\u542F\",unCheckedChildren:\"\\u5173\\u95ED\"}),autoRefresh&&isTradingTime()&&/*#__PURE__*/_jsx(Text,{style:{color:'#10b981',fontSize:'11px'},children:\"(\\u4EA4\\u6613\\u65F6\\u95F4\\u5185\\u6BCF2\\u5206\\u949F)\"}),autoRefresh&&!isTradingTime()&&/*#__PURE__*/_jsx(Text,{style:{color:'#f59e0b',fontSize:'11px'},children:\"(\\u975E\\u4EA4\\u6613\\u65F6\\u95F4\\u6682\\u505C)\"})]})]})]})]}),/*#__PURE__*/_jsxs(Content,{style:{padding:'36px 24px 24px 24px',background:'#1a1d29'},children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsx(StatsCards,{stocks:stocks,loading:loading}),/*#__PURE__*/_jsx(Card,{title:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:12},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'1.1rem',fontWeight:600},children:\"\\u6211\\u7684\\u5173\\u6CE8\\u5217\\u8868\"}),lastUpdateTime&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:6,padding:'2px 8px',background:isFromCache?'#3a2d1a':'#1a2d3a',borderRadius:'4px',border:`1px solid ${isFromCache?'#4a3d2a':'#2a3d4a'}`},children:[isFromCache?/*#__PURE__*/_jsx(ClockCircleOutlined,{style:{color:'#f59e0b',fontSize:'12px'}}):/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{color:'#10b981',fontSize:'12px'}}),/*#__PURE__*/_jsx(Text,{style:{color:isFromCache?'#f59e0b':'#10b981',fontSize:'12px',fontWeight:500},children:isFromCache?'缓存数据':'最新数据'}),/*#__PURE__*/_jsx(Text,{style:{color:'#8b8d97',fontSize:'11px'},children:stockCache.formatTimestamp(lastUpdateTime)})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:16},children:[/*#__PURE__*/_jsx(Dropdown,{menu:{items:[{key:'excel',label:'导出为 Excel (.xlsx)',icon:/*#__PURE__*/_jsx(DownloadOutlined,{})},{key:'csv',label:'导出为 CSV (.csv)',icon:/*#__PURE__*/_jsx(DownloadOutlined,{})}],onClick:_ref=>{let{key}=_ref;return key==='excel'?exportToExcel(stocks,'股票关注列表'):exportToCSV(stocks,'股票关注列表');}},placement:\"bottomRight\",children:/*#__PURE__*/_jsx(Button,{type:\"default\",icon:/*#__PURE__*/_jsx(DownloadOutlined,{}),size:\"small\",style:{background:'#2a2d3a',borderColor:'#3a3d4a',color:'#667eea'},children:\"\\u5BFC\\u51FA\\u6570\\u636E\"})}),apiStats&&/*#__PURE__*/_jsxs(Text,{style:{color:'#8b8d97',fontSize:'0.85rem'},children:[\"API\\u8C03\\u7528: \",apiStats.total_requests,\" | \\u7F13\\u5B58\\u547D\\u4E2D: \",apiStats.cache_hits]}),/*#__PURE__*/_jsxs(Text,{style:{color:'#8b8d97',fontSize:'0.85rem'},children:[\"\\u5171 \",stocks.length,\" \\u53EA\\u80A1\\u7968\"]})]})]}),style:{background:'#2a2d3a',border:'1px solid #3a3d4a',borderRadius:'12px'},bodyStyle:{padding:0},children:/*#__PURE__*/_jsx(StockTable,{stocks:stocks,loading:loading,onRemoveStock:handleRemoveStock})}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-info\",style:{textAlign:'center',marginTop:32,padding:24,color:'#8b8d97',fontSize:'0.85rem'},children:[/*#__PURE__*/_jsx(Divider,{style:{borderColor:'#3a3d4a',margin:'16px 0'}}),/*#__PURE__*/_jsxs(Space,{split:/*#__PURE__*/_jsx(\"span\",{style:{color:'#3a3d4a'},children:\"|\"}),children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u6570\\u636E\\u6765\\u6E90: \\u4E1C\\u65B9\\u8D22\\u5BCC & \\u65B0\\u6D6A\\u8D22\\u7ECF\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u66F4\\u65B0\\u9891\\u7387: \\u5B9E\\u65F6\\u6570\\u636E\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u7F13\\u5B58\\u65F6\\u95F4: 5\\u5206\\u949F\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u6700\\u540E\\u66F4\\u65B0: \",new Date().toLocaleString('zh-CN')]})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:16,fontSize:'0.8rem',color:'#6b7280'},children:/*#__PURE__*/_jsxs(Space,{split:/*#__PURE__*/_jsx(\"span\",{style:{color:'#3a3d4a'},children:\"\\u2022\"}),children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u652F\\u6301A\\u80A1\\u4E3B\\u677F\\u3001\\u521B\\u4E1A\\u677F\\u3001\\u79D1\\u521B\\u677F\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u63D0\\u4F9B\\u5B9E\\u65F6\\u4EF7\\u683C\\u3001\\u8D22\\u52A1\\u6307\\u6807\\u3001\\u4F30\\u503C\\u5206\\u6790\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u667A\\u80FD\\u80A1\\u7968\\u7B5B\\u9009\\u4E0E\\u5173\\u6CE8\\u5217\\u8868\\u7BA1\\u7406\"})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:12,fontSize:'0.75rem',color:'#6b7280'},children:[/*#__PURE__*/_jsx(Text,{style:{color:'#ef4444'},children:\"\\u98CE\\u9669\\u63D0\\u793A\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:\" \\u80A1\\u5E02\\u6709\\u98CE\\u9669\\uFF0C\\u6295\\u8D44\\u9700\\u8C28\\u614E\\u3002\\u672C\\u7CFB\\u7EDF\\u4EC5\\u4F9B\\u53C2\\u8003\\uFF0C\\u4E0D\\u6784\\u6210\\u6295\\u8D44\\u5EFA\\u8BAE\\u3002\"})]})]})]})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Layout","Card","Button","message","Space","Typography","Divider","Switch","Tooltip","Dropdown","ReloadOutlined","ClearOutlined","BarChartOutlined","ClockCircleOutlined","CheckCircleOutlined","DownloadOutlined","exportToExcel","exportToCSV","StatsCards","SearchBox","StockTable","apiService","handleApiError","frontendCache","stockCache","CACHE_KEYS","jsx","_jsx","jsxs","_jsxs","Header","Content","Title","Text","App","stocks","setStocks","loading","setLoading","refreshing","setRefreshing","apiStats","setApiStats","lastUpdateTime","setLastUpdateTime","isFromCache","setIsFromCache","autoRefresh","setAutoRefresh","autoRefreshTimerRef","fetchWatchlist","showLoading","arguments","length","undefined","forceRefresh","cacheInfo","getCacheInfo","WATCHLIST","console","log","data","timestamp","setTimeout","fetchWatchlistFromApi","error","response","getWatchlist","success","now","Date","set","fetchApiStats","getApiStats","handleAddStock","stock","addToWatchlist","code","name","remove","handleRemoveStock","removeFromWatchlist","handleRefresh","Promise","all","handleClearCache","clear","clearCache","warning","initData","isTradingTime","day","getDay","hour","getHours","minute","getMinutes","timeInMinutes","morningStart","morningEnd","afternoonStart","afternoonEnd","current","clearInterval","setInterval","style","minHeight","background","children","borderBottom","padding","display","alignItems","justifyContent","height","lineHeight","fontSize","color","marginRight","level","margin","gap","onSelectStock","onAddStock","title","borderRadius","border","cursor","transition","onClick","fontWeight","formatTimestamp","type","icon","spin","size","borderColor","checked","onChange","checkedChildren","unCheckedChildren","className","menu","items","key","label","_ref","placement","total_requests","cache_hits","bodyStyle","onRemoveStock","textAlign","marginTop","split","toLocaleString"],"sources":["E:/AICode/StockInsight/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Layout, Card, Button, message, Space, Typography, Divider, Switch, Tooltip, Dropdown } from 'antd';\r\nimport { ReloadOutlined, ClearOutlined, BarChartOutlined, ClockCircleOutlined, CheckCircleOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport { exportToExcel, exportToCSV } from './utils/exportUtils';\r\nimport StatsCards from './components/StatsCards';\r\nimport SearchBox from './components/SearchBox';\r\nimport StockTable from './components/StockTable';\r\nimport { apiService, StockInfo, SearchResult } from './services/api';\r\nimport { handleApiError } from './utils/helpers';\r\nimport { frontendCache } from './utils/cache';\r\nimport { stockCache, CACHE_KEYS } from './utils/stockCache';\r\nimport './styles/global.css';\r\n\r\nconst { Header, Content } = Layout;\r\nconst { Title, Text } = Typography;\r\n\r\nconst App: React.FC = () => {\r\n  const [stocks, setStocks] = useState<StockInfo[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [apiStats, setApiStats] = useState<any>(null);\r\n  const [lastUpdateTime, setLastUpdateTime] = useState<number | null>(null);\r\n  const [isFromCache, setIsFromCache] = useState(false);\r\n  const [autoRefresh, setAutoRefresh] = useState<boolean>(true);\r\n  const autoRefreshTimerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // 获取关注列表 - 集成智能缓存\r\n  const fetchWatchlist = useCallback(async (showLoading = true, forceRefresh = false) => {\r\n    if (showLoading) setLoading(true);\r\n    \r\n    try {\r\n      // 如果不是强制刷新，先尝试从缓存获取数据\r\n      if (!forceRefresh) {\r\n        const cacheInfo = stockCache.getCacheInfo<StockInfo[]>(CACHE_KEYS.WATCHLIST);\r\n        if (cacheInfo) {\r\n          console.log('使用缓存的关注列表数据');\r\n          setStocks(cacheInfo.data);\r\n          setLastUpdateTime(cacheInfo.timestamp);\r\n          setIsFromCache(true);\r\n          if (showLoading) setLoading(false);\r\n          \r\n          // 后台静默更新\r\n          setTimeout(() => {\r\n            fetchWatchlistFromApi(false);\r\n          }, 100);\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // 从API获取数据\r\n      await fetchWatchlistFromApi(showLoading);\r\n    } catch (error) {\r\n      console.error('获取关注列表失败:', error);\r\n      message.error(handleApiError(error));\r\n      if (showLoading) setLoading(false);\r\n    }\r\n  }, []);\r\n  \r\n  // 从API获取关注列表数据\r\n  const fetchWatchlistFromApi = async (showLoading = true) => {\r\n    try {\r\n      const response = await apiService.getWatchlist(true); // 强制从API获取\r\n      if (response.success && response.data) {\r\n        setStocks(response.data);\r\n        const now = Date.now();\r\n        setLastUpdateTime(now);\r\n        setIsFromCache(false);\r\n        \r\n        // 缓存数据\r\n        stockCache.set(CACHE_KEYS.WATCHLIST, response.data);\r\n        \r\n        console.log('从API获取关注列表数据并已缓存');\r\n      } else {\r\n        message.error('获取关注列表失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('从API获取关注列表失败:', error);\r\n      throw error;\r\n    } finally {\r\n      if (showLoading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 获取API统计信息\r\n  const fetchApiStats = useCallback(async () => {\r\n    try {\r\n      const response = await apiService.getApiStats();\r\n      if (response.success && response.data) {\r\n        setApiStats(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('获取API统计失败:', error);\r\n    }\r\n  }, []);\r\n\r\n  // 添加股票到关注列表\r\n  const handleAddStock = async (stock: SearchResult) => {\r\n    try {\r\n      const response = await apiService.addToWatchlist(stock.code);\r\n      if (response.success) {\r\n        message.success(`已添加 ${stock.name} 到关注列表`);\r\n        // 清除缓存并强制刷新关注列表\r\n        stockCache.remove(CACHE_KEYS.WATCHLIST);\r\n        await fetchWatchlistFromApi(false);\r\n        await fetchApiStats(); // 同时更新统计信息\r\n      } else {\r\n        message.error(response.message || '添加失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('添加股票失败:', error);\r\n      message.error(handleApiError(error));\r\n    }\r\n  };\r\n\r\n  // 从关注列表移除股票\r\n  const handleRemoveStock = async (code: string) => {\r\n    try {\r\n      const response = await apiService.removeFromWatchlist(code);\r\n      if (response.success) {\r\n        // 清除缓存并强制刷新关注列表\r\n        stockCache.remove(CACHE_KEYS.WATCHLIST);\r\n        await fetchWatchlistFromApi(false);\r\n        await fetchApiStats(); // 同时更新统计信息\r\n        message.success('股票已从关注列表移除');\r\n      } else {\r\n        message.error(response.message || '移除失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('移除股票失败:', error);\r\n      message.error(handleApiError(error));\r\n    }\r\n  };\r\n\r\n  // 刷新数据\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      // 强制刷新所有数据\r\n      await Promise.all([\r\n        fetchWatchlistFromApi(false),\r\n        fetchApiStats()\r\n      ]);\r\n      message.success('数据已更新');\r\n    } catch (error) {\r\n      message.error('刷新失败');\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  // 清空缓存\r\n  const handleClearCache = async () => {\r\n    try {\r\n      // 清空前端缓存\r\n      frontendCache.clear();\r\n      stockCache.clear();\r\n      \r\n      // 清空后端缓存\r\n      const response = await apiService.clearCache();\r\n      if (response.success) {\r\n        message.success('前端和后端缓存已清空');\r\n        await fetchWatchlistFromApi(false);\r\n        await fetchApiStats();\r\n      } else {\r\n        message.warning('后端缓存清空失败，但前端缓存已清空');\r\n        await fetchWatchlistFromApi(false);\r\n        await fetchApiStats();\r\n      }\r\n    } catch (error) {\r\n      console.error('清空缓存失败:', error);\r\n      // 即使后端清空失败，前端缓存也已清空\r\n      message.warning('前端缓存已清空，后端缓存清空失败');\r\n      await fetchWatchlistFromApi(false);\r\n      await fetchApiStats();\r\n    }\r\n  };\r\n\r\n  // 组件挂载时获取数据 - 优化加载策略\r\n  useEffect(() => {\r\n    const initData = async () => {\r\n      // 先加载关键数据（关注列表）\r\n      await fetchWatchlist();\r\n      // 然后异步加载统计信息（非关键数据）\r\n      setTimeout(() => {\r\n        fetchApiStats();\r\n      }, 100);\r\n    };\r\n    initData();\r\n  }, [fetchWatchlist, fetchApiStats]);\r\n\r\n  // 检查是否为交易时间\r\n  const isTradingTime = useCallback((): boolean => {\r\n    const now = new Date();\r\n    const day = now.getDay(); // 0=周日, 1=周一, ..., 6=周六\r\n    const hour = now.getHours();\r\n    const minute = now.getMinutes();\r\n    const timeInMinutes = hour * 60 + minute;\r\n\r\n    // 非工作日\r\n    if (day === 0 || day === 6) {\r\n      return false;\r\n    }\r\n\r\n    // 上午交易时间：9:30-11:30\r\n    const morningStart = 9 * 60 + 30; // 9:30\r\n    const morningEnd = 11 * 60 + 30;   // 11:30\r\n    \r\n    // 下午交易时间：13:00-15:00\r\n    const afternoonStart = 13 * 60;    // 13:00\r\n    const afternoonEnd = 15 * 60;      // 15:00\r\n\r\n    return (timeInMinutes >= morningStart && timeInMinutes <= morningEnd) ||\r\n           (timeInMinutes >= afternoonStart && timeInMinutes <= afternoonEnd);\r\n  }, []);\r\n\r\n  // 自动刷新数据\r\n  useEffect(() => {\r\n    // 清除现有的定时器\r\n    if (autoRefreshTimerRef.current) {\r\n      clearInterval(autoRefreshTimerRef.current);\r\n      autoRefreshTimerRef.current = null;\r\n    }\r\n\r\n    // 如果自动刷新开启，则设置定时器\r\n    if (autoRefresh) {\r\n      autoRefreshTimerRef.current = setInterval(() => {\r\n        // 只在交易时间内自动刷新\r\n        if (isTradingTime()) {\r\n          console.log('交易时间内自动刷新数据');\r\n          fetchWatchlist(false);\r\n        } else {\r\n          console.log('非交易时间，跳过自动刷新');\r\n        }\r\n      }, 2 * 60 * 1000); // 交易时间内每2分钟刷新一次\r\n    }\r\n\r\n    return () => {\r\n      if (autoRefreshTimerRef.current) {\r\n        clearInterval(autoRefreshTimerRef.current);\r\n      }\r\n    };\r\n  }, [fetchWatchlist, autoRefresh, isTradingTime]);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh', background: '#1a1d29' }}>\r\n      <Header style={{ \r\n        background: '#2a2d3a', \r\n        borderBottom: '1px solid #3a3d4a',\r\n        padding: '0 24px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        height: '70px', // 增加头部高度\r\n        lineHeight: 'normal' // 重置行高，避免影响内部元素\r\n      }}>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <BarChartOutlined style={{ fontSize: '1.5rem', color: '#667eea', marginRight: 12 }} />\r\n          <Title level={3} style={{ margin: 0, color: '#ffffff' }}>\r\n            股票数据看板\r\n          </Title>\r\n        </div>\r\n        \r\n        <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n          <SearchBox onSelectStock={handleAddStock} onAddStock={handleAddStock} />\r\n          \r\n          {/* 最后更新时间显示 - 可点击刷新 */}\r\n          {lastUpdateTime && (\r\n            <Tooltip title=\"点击刷新数据\">\r\n              <div \r\n                style={{ \r\n                  display: 'flex', \r\n                  alignItems: 'center', \r\n                  gap: 8,\r\n                  padding: '4px 12px',\r\n                  background: isFromCache ? '#3a2d1a' : '#1a2d3a',\r\n                  borderRadius: '6px',\r\n                  border: `1px solid ${isFromCache ? '#4a3d2a' : '#2a3d4a'}`,\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.3s'\r\n                }}\r\n                onClick={handleRefresh}\r\n              >\r\n                {isFromCache ? (\r\n                  <ClockCircleOutlined style={{ \r\n                    color: '#f59e0b',\r\n                    fontSize: '12px'\r\n                  }} />\r\n                ) : (\r\n                  <CheckCircleOutlined style={{ \r\n                    color: '#10b981',\r\n                    fontSize: '12px'\r\n                  }} />\r\n                )}\r\n                <Text style={{ \r\n                  color: isFromCache ? '#f59e0b' : '#10b981',\r\n                  fontSize: '12px',\r\n                  fontWeight: 500\r\n                }}>\r\n                  {isFromCache ? '缓存数据' : '最新数据'}\r\n                </Text>\r\n                <Text style={{ \r\n                  color: '#8b8d97',\r\n                  fontSize: '11px'\r\n                }}>\r\n                  {stockCache.formatTimestamp(lastUpdateTime)}\r\n                </Text>\r\n              </div>\r\n            </Tooltip>\r\n          )}\r\n          \r\n          <Space>\r\n            <Button \r\n              type=\"default\" \r\n              icon={<ReloadOutlined spin={refreshing} />} \r\n              onClick={handleRefresh}\r\n              loading={refreshing}\r\n              size=\"small\"\r\n              style={{\r\n                background: '#2a2d3a',\r\n                borderColor: '#3a3d4a',\r\n                color: '#ffffff'\r\n              }}\r\n            >\r\n              手动刷新\r\n            </Button>\r\n            \r\n            <Button \r\n              type=\"default\" \r\n              icon={<ClearOutlined />} \r\n              onClick={handleClearCache}\r\n              size=\"small\"\r\n              style={{\r\n                background: '#2a2d3a',\r\n                borderColor: '#3a3d4a',\r\n                color: '#ffffff'\r\n              }}\r\n            >\r\n              清空缓存\r\n            </Button>\r\n\r\n            <div style={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              gap: 8,\r\n              padding: '4px 8px',\r\n              background: '#2a2d3a',\r\n              borderRadius: '6px',\r\n              border: '1px solid #3a3d4a'\r\n            }}>\r\n              <Text style={{ color: '#ffffff', fontSize: '12px' }}>\r\n                自动刷新:\r\n              </Text>\r\n              <Switch \r\n                size=\"small\" \r\n                checked={autoRefresh} \r\n                onChange={setAutoRefresh}\r\n                checkedChildren=\"开启\" \r\n                unCheckedChildren=\"关闭\"\r\n              />\r\n              {autoRefresh && isTradingTime() && (\r\n                <Text style={{ color: '#10b981', fontSize: '11px' }}>\r\n                  (交易时间内每2分钟)\r\n                </Text>\r\n              )}\r\n              {autoRefresh && !isTradingTime() && (\r\n                <Text style={{ color: '#f59e0b', fontSize: '11px' }}>\r\n                  (非交易时间暂停)\r\n                </Text>\r\n              )}\r\n            </div>\r\n          </Space>\r\n        </div>\r\n      </Header>\r\n\r\n      <Content style={{ padding: '36px 24px 24px 24px', background: '#1a1d29' }}> {/* 增加顶部内边距 */}\r\n        <div className=\"main-container\">\r\n          {/* 统计卡片 */}\r\n          <StatsCards stocks={stocks} loading={loading} />\r\n\r\n          {/* 主要内容区域 */}\r\n          <Card \r\n            title={\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\r\n                  <span style={{ fontSize: '1.1rem', fontWeight: 600 }}>我的关注列表</span>\r\n                  {lastUpdateTime && (\r\n                    <div style={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 6,\r\n                      padding: '2px 8px',\r\n                      background: isFromCache ? '#3a2d1a' : '#1a2d3a',\r\n                      borderRadius: '4px',\r\n                      border: `1px solid ${isFromCache ? '#4a3d2a' : '#2a3d4a'}`\r\n                    }}>\r\n                      {isFromCache ? (\r\n                        <ClockCircleOutlined style={{ color: '#f59e0b', fontSize: '12px' }} />\r\n                      ) : (\r\n                        <CheckCircleOutlined style={{ color: '#10b981', fontSize: '12px' }} />\r\n                      )}\r\n                      <Text style={{ \r\n                        color: isFromCache ? '#f59e0b' : '#10b981',\r\n                        fontSize: '12px',\r\n                        fontWeight: 500\r\n                      }}>\r\n                        {isFromCache ? '缓存数据' : '最新数据'}\r\n                      </Text>\r\n                      <Text style={{ color: '#8b8d97', fontSize: '11px' }}>\r\n                        {stockCache.formatTimestamp(lastUpdateTime)}\r\n                      </Text>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                  <Dropdown menu={{ \r\n                    items: [\r\n                      { key: 'excel', label: '导出为 Excel (.xlsx)', icon: <DownloadOutlined /> },\r\n                      { key: 'csv', label: '导出为 CSV (.csv)', icon: <DownloadOutlined /> }\r\n                    ],\r\n                    onClick: ({ key }) => key === 'excel' ? exportToExcel(stocks, '股票关注列表') : exportToCSV(stocks, '股票关注列表')\r\n                  }} placement=\"bottomRight\">\r\n                    <Button \r\n                      type=\"default\" \r\n                      icon={<DownloadOutlined />} \r\n                      size=\"small\"\r\n                      style={{\r\n                        background: '#2a2d3a',\r\n                        borderColor: '#3a3d4a',\r\n                        color: '#667eea'\r\n                      }}\r\n                    >\r\n                      导出数据\r\n                    </Button>\r\n                  </Dropdown>\r\n                  {apiStats && (\r\n                    <Text style={{ color: '#8b8d97', fontSize: '0.85rem' }}>\r\n                      API调用: {apiStats.total_requests} | 缓存命中: {apiStats.cache_hits}\r\n                    </Text>\r\n                  )}\r\n                  <Text style={{ color: '#8b8d97', fontSize: '0.85rem' }}>\r\n                    共 {stocks.length} 只股票\r\n                  </Text>\r\n                </div>\r\n              </div>\r\n            }\r\n            style={{\r\n              background: '#2a2d3a',\r\n              border: '1px solid #3a3d4a',\r\n              borderRadius: '12px'\r\n            }}\r\n            bodyStyle={{ padding: 0 }}\r\n          >\r\n            <StockTable \r\n              stocks={stocks} \r\n              loading={loading} \r\n              onRemoveStock={handleRemoveStock}\r\n            />\r\n          </Card>\r\n\r\n          {/* 页脚信息 */}\r\n          <div className=\"footer-info\" style={{ \r\n            textAlign: 'center', \r\n            marginTop: 32, \r\n            padding: 24,\r\n            color: '#8b8d97',\r\n            fontSize: '0.85rem'\r\n          }}>\r\n            <Divider style={{ borderColor: '#3a3d4a', margin: '16px 0' }} />\r\n            <Space split={<span style={{ color: '#3a3d4a' }}>|</span>}>\r\n              <span>数据来源: 东方财富 & 新浪财经</span>\r\n              <span>更新频率: 实时数据</span>\r\n              <span>缓存时间: 5分钟</span>\r\n              <span>最后更新: {new Date().toLocaleString('zh-CN')}</span>\r\n            </Space>\r\n            <div style={{ marginTop: 16, fontSize: '0.8rem', color: '#6b7280' }}>\r\n              <Space split={<span style={{ color: '#3a3d4a' }}>•</span>}>\r\n                <span>支持A股主板、创业板、科创板</span>\r\n                <span>提供实时价格、财务指标、估值分析</span>\r\n                <span>智能股票筛选与关注列表管理</span>\r\n              </Space>\r\n            </div>\r\n            <div style={{ marginTop: 12, fontSize: '0.75rem', color: '#6b7280' }}>\r\n              <Text style={{ color: '#ef4444' }}>风险提示：</Text>\r\n              <span> 股市有风险，投资需谨慎。本系统仅供参考，不构成投资建议。</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}