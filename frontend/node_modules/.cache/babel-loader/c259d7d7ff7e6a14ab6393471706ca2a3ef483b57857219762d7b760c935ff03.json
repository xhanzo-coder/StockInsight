{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport CaretDownOutlined from \"@ant-design/icons/es/icons/CaretDownOutlined\";\nimport CaretUpOutlined from \"@ant-design/icons/es/icons/CaretUpOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport Tooltip from '../../tooltip';\nimport { getColumnKey, getColumnPos, renderColumnTitle, safeColumnTitle } from '../util';\nconst ASCEND = 'ascend';\nconst DESCEND = 'descend';\nconst getMultiplePriority = column => {\n  if (typeof column.sorter === 'object' && typeof column.sorter.multiple === 'number') {\n    return column.sorter.multiple;\n  }\n  return false;\n};\nconst getSortFunction = sorter => {\n  if (typeof sorter === 'function') {\n    return sorter;\n  }\n  if (sorter && typeof sorter === 'object' && sorter.compare) {\n    return sorter.compare;\n  }\n  return false;\n};\nconst nextSortDirection = (sortDirections, current) => {\n  if (!current) {\n    return sortDirections[0];\n  }\n  return sortDirections[sortDirections.indexOf(current) + 1];\n};\nconst collectSortStates = (columns, init, pos) => {\n  let sortStates = [];\n  const pushState = (column, columnPos) => {\n    sortStates.push({\n      column,\n      key: getColumnKey(column, columnPos),\n      multiplePriority: getMultiplePriority(column),\n      sortOrder: column.sortOrder\n    });\n  };\n  (columns || []).forEach((column, index) => {\n    const columnPos = getColumnPos(index, pos);\n    if (column.children) {\n      if ('sortOrder' in column) {\n        // Controlled\n        pushState(column, columnPos);\n      }\n      sortStates = [].concat(_toConsumableArray(sortStates), _toConsumableArray(collectSortStates(column.children, init, columnPos)));\n    } else if (column.sorter) {\n      if ('sortOrder' in column) {\n        // Controlled\n        pushState(column, columnPos);\n      } else if (init && column.defaultSortOrder) {\n        // Default sorter\n        sortStates.push({\n          column,\n          key: getColumnKey(column, columnPos),\n          multiplePriority: getMultiplePriority(column),\n          sortOrder: column.defaultSortOrder\n        });\n      }\n    }\n  });\n  return sortStates;\n};\nconst injectSorter = (prefixCls, columns, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, pos) => {\n  const finalColumns = (columns || []).map((column, index) => {\n    const columnPos = getColumnPos(index, pos);\n    let newColumn = column;\n    if (newColumn.sorter) {\n      const sortDirections = newColumn.sortDirections || defaultSortDirections;\n      const showSorterTooltip = newColumn.showSorterTooltip === undefined ? tableShowSorterTooltip : newColumn.showSorterTooltip;\n      const columnKey = getColumnKey(newColumn, columnPos);\n      const sorterState = sorterStates.find(_ref => {\n        let {\n          key\n        } = _ref;\n        return key === columnKey;\n      });\n      const sortOrder = sorterState ? sorterState.sortOrder : null;\n      const nextSortOrder = nextSortDirection(sortDirections, sortOrder);\n      let sorter;\n      if (column.sortIcon) {\n        sorter = column.sortIcon({\n          sortOrder\n        });\n      } else {\n        const upNode = sortDirections.includes(ASCEND) && (/*#__PURE__*/React.createElement(CaretUpOutlined, {\n          className: classNames(`${prefixCls}-column-sorter-up`, {\n            active: sortOrder === ASCEND\n          })\n        }));\n        const downNode = sortDirections.includes(DESCEND) && (/*#__PURE__*/React.createElement(CaretDownOutlined, {\n          className: classNames(`${prefixCls}-column-sorter-down`, {\n            active: sortOrder === DESCEND\n          })\n        }));\n        sorter = /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(`${prefixCls}-column-sorter`, {\n            [`${prefixCls}-column-sorter-full`]: !!(upNode && downNode)\n          })\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: `${prefixCls}-column-sorter-inner`,\n          \"aria-hidden\": \"true\"\n        }, upNode, downNode));\n      }\n      const {\n        cancelSort,\n        triggerAsc,\n        triggerDesc\n      } = tableLocale || {};\n      let sortTip = cancelSort;\n      if (nextSortOrder === DESCEND) {\n        sortTip = triggerDesc;\n      } else if (nextSortOrder === ASCEND) {\n        sortTip = triggerAsc;\n      }\n      const tooltipProps = typeof showSorterTooltip === 'object' ? Object.assign({\n        title: sortTip\n      }, showSorterTooltip) : {\n        title: sortTip\n      };\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        className: classNames(newColumn.className, {\n          [`${prefixCls}-column-sort`]: sortOrder\n        }),\n        title: renderProps => {\n          const columnSortersClass = `${prefixCls}-column-sorters`;\n          const renderColumnTitleWrapper = /*#__PURE__*/React.createElement(\"span\", {\n            className: `${prefixCls}-column-title`\n          }, renderColumnTitle(column.title, renderProps));\n          const renderSortTitle = /*#__PURE__*/React.createElement(\"div\", {\n            className: columnSortersClass\n          }, renderColumnTitleWrapper, sorter);\n          if (showSorterTooltip) {\n            if (typeof showSorterTooltip !== 'boolean' && (showSorterTooltip === null || showSorterTooltip === void 0 ? void 0 : showSorterTooltip.target) === 'sorter-icon') {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: `${columnSortersClass} ${prefixCls}-column-sorters-tooltip-target-sorter`\n              }, renderColumnTitleWrapper, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), sorter));\n            }\n            return /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), renderSortTitle);\n          }\n          return renderSortTitle;\n        },\n        onHeaderCell: col => {\n          var _a;\n          const cell = ((_a = column.onHeaderCell) === null || _a === void 0 ? void 0 : _a.call(column, col)) || {};\n          const originOnClick = cell.onClick;\n          const originOKeyDown = cell.onKeyDown;\n          cell.onClick = event => {\n            triggerSorter({\n              column,\n              key: columnKey,\n              sortOrder: nextSortOrder,\n              multiplePriority: getMultiplePriority(column)\n            });\n            originOnClick === null || originOnClick === void 0 ? void 0 : originOnClick(event);\n          };\n          cell.onKeyDown = event => {\n            if (event.keyCode === KeyCode.ENTER) {\n              triggerSorter({\n                column,\n                key: columnKey,\n                sortOrder: nextSortOrder,\n                multiplePriority: getMultiplePriority(column)\n              });\n              originOKeyDown === null || originOKeyDown === void 0 ? void 0 : originOKeyDown(event);\n            }\n          };\n          const renderTitle = safeColumnTitle(column.title, {});\n          const displayTitle = renderTitle === null || renderTitle === void 0 ? void 0 : renderTitle.toString();\n          // Inform the screen-reader so it can tell the visually impaired user which column is sorted\n          if (sortOrder) {\n            cell['aria-sort'] = sortOrder === 'ascend' ? 'ascending' : 'descending';\n          }\n          cell['aria-label'] = displayTitle || '';\n          cell.className = classNames(cell.className, `${prefixCls}-column-has-sorters`);\n          cell.tabIndex = 0;\n          if (column.ellipsis) {\n            cell.title = (renderTitle !== null && renderTitle !== void 0 ? renderTitle : '').toString();\n          }\n          return cell;\n        }\n      });\n    }\n    if ('children' in newColumn) {\n      newColumn = Object.assign(Object.assign({}, newColumn), {\n        children: injectSorter(prefixCls, newColumn.children, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, columnPos)\n      });\n    }\n    return newColumn;\n  });\n  return finalColumns;\n};\nconst stateToInfo = sorterState => {\n  const {\n    column,\n    sortOrder\n  } = sorterState;\n  return {\n    column,\n    order: sortOrder,\n    field: column.dataIndex,\n    columnKey: column.key\n  };\n};\nconst generateSorterInfo = sorterStates => {\n  const activeSorters = sorterStates.filter(_ref2 => {\n    let {\n      sortOrder\n    } = _ref2;\n    return sortOrder;\n  }).map(stateToInfo);\n  // =========== Legacy compatible support ===========\n  // https://github.com/ant-design/ant-design/pull/19226\n  if (activeSorters.length === 0 && sorterStates.length) {\n    const lastIndex = sorterStates.length - 1;\n    return Object.assign(Object.assign({}, stateToInfo(sorterStates[lastIndex])), {\n      column: undefined,\n      order: undefined,\n      field: undefined,\n      columnKey: undefined\n    });\n  }\n  if (activeSorters.length <= 1) {\n    return activeSorters[0] || {};\n  }\n  return activeSorters;\n};\nexport const getSortData = (data, sortStates, childrenColumnName) => {\n  const innerSorterStates = sortStates.slice().sort((a, b) => b.multiplePriority - a.multiplePriority);\n  const cloneData = data.slice();\n  const runningSorters = innerSorterStates.filter(_ref3 => {\n    let {\n      column: {\n        sorter\n      },\n      sortOrder\n    } = _ref3;\n    return getSortFunction(sorter) && sortOrder;\n  });\n  // Skip if no sorter needed\n  if (!runningSorters.length) {\n    return cloneData;\n  }\n  return cloneData.sort((record1, record2) => {\n    for (let i = 0; i < runningSorters.length; i += 1) {\n      const sorterState = runningSorters[i];\n      const {\n        column: {\n          sorter\n        },\n        sortOrder\n      } = sorterState;\n      const compareFn = getSortFunction(sorter);\n      if (compareFn && sortOrder) {\n        const compareResult = compareFn(record1, record2, sortOrder);\n        if (compareResult !== 0) {\n          return sortOrder === ASCEND ? compareResult : -compareResult;\n        }\n      }\n    }\n    return 0;\n  }).map(record => {\n    const subRecords = record[childrenColumnName];\n    if (subRecords) {\n      return Object.assign(Object.assign({}, record), {\n        [childrenColumnName]: getSortData(subRecords, sortStates, childrenColumnName)\n      });\n    }\n    return record;\n  });\n};\nconst useFilterSorter = props => {\n  const {\n    prefixCls,\n    mergedColumns,\n    sortDirections,\n    tableLocale,\n    showSorterTooltip,\n    onSorterChange\n  } = props;\n  const [sortStates, setSortStates] = React.useState(() => collectSortStates(mergedColumns, true));\n  const getColumnKeys = (columns, pos) => {\n    const newKeys = [];\n    columns.forEach((item, index) => {\n      const columnPos = getColumnPos(index, pos);\n      newKeys.push(getColumnKey(item, columnPos));\n      if (Array.isArray(item.children)) {\n        const childKeys = getColumnKeys(item.children, columnPos);\n        newKeys.push.apply(newKeys, _toConsumableArray(childKeys));\n      }\n    });\n    return newKeys;\n  };\n  const mergedSorterStates = React.useMemo(() => {\n    let validate = true;\n    const collectedStates = collectSortStates(mergedColumns, false);\n    // Return if not controlled\n    if (!collectedStates.length) {\n      const mergedColumnsKeys = getColumnKeys(mergedColumns);\n      return sortStates.filter(_ref4 => {\n        let {\n          key\n        } = _ref4;\n        return mergedColumnsKeys.includes(key);\n      });\n    }\n    const validateStates = [];\n    function patchStates(state) {\n      if (validate) {\n        validateStates.push(state);\n      } else {\n        validateStates.push(Object.assign(Object.assign({}, state), {\n          sortOrder: null\n        }));\n      }\n    }\n    let multipleMode = null;\n    collectedStates.forEach(state => {\n      if (multipleMode === null) {\n        patchStates(state);\n        if (state.sortOrder) {\n          if (state.multiplePriority === false) {\n            validate = false;\n          } else {\n            multipleMode = true;\n          }\n        }\n      } else if (multipleMode && state.multiplePriority !== false) {\n        patchStates(state);\n      } else {\n        validate = false;\n        patchStates(state);\n      }\n    });\n    return validateStates;\n  }, [mergedColumns, sortStates]);\n  // Get render columns title required props\n  const columnTitleSorterProps = React.useMemo(() => {\n    var _a, _b;\n    const sortColumns = mergedSorterStates.map(_ref5 => {\n      let {\n        column,\n        sortOrder\n      } = _ref5;\n      return {\n        column,\n        order: sortOrder\n      };\n    });\n    return {\n      sortColumns,\n      // Legacy\n      sortColumn: (_a = sortColumns[0]) === null || _a === void 0 ? void 0 : _a.column,\n      sortOrder: (_b = sortColumns[0]) === null || _b === void 0 ? void 0 : _b.order\n    };\n  }, [mergedSorterStates]);\n  const triggerSorter = sortState => {\n    let newSorterStates;\n    if (sortState.multiplePriority === false || !mergedSorterStates.length || mergedSorterStates[0].multiplePriority === false) {\n      newSorterStates = [sortState];\n    } else {\n      newSorterStates = [].concat(_toConsumableArray(mergedSorterStates.filter(_ref6 => {\n        let {\n          key\n        } = _ref6;\n        return key !== sortState.key;\n      })), [sortState]);\n    }\n    setSortStates(newSorterStates);\n    onSorterChange(generateSorterInfo(newSorterStates), newSorterStates);\n  };\n  const transformColumns = innerColumns => injectSorter(prefixCls, innerColumns, mergedSorterStates, triggerSorter, sortDirections, tableLocale, showSorterTooltip);\n  const getSorters = () => generateSorterInfo(mergedSorterStates);\n  return [transformColumns, mergedSorterStates, columnTitleSorterProps, getSorters];\n};\nexport default useFilterSorter;","map":{"version":3,"names":["_toConsumableArray","React","CaretDownOutlined","CaretUpOutlined","classNames","KeyCode","Tooltip","getColumnKey","getColumnPos","renderColumnTitle","safeColumnTitle","ASCEND","DESCEND","getMultiplePriority","column","sorter","multiple","getSortFunction","compare","nextSortDirection","sortDirections","current","indexOf","collectSortStates","columns","init","pos","sortStates","pushState","columnPos","push","key","multiplePriority","sortOrder","forEach","index","children","concat","defaultSortOrder","injectSorter","prefixCls","sorterStates","triggerSorter","defaultSortDirections","tableLocale","tableShowSorterTooltip","finalColumns","map","newColumn","showSorterTooltip","undefined","columnKey","sorterState","find","_ref","nextSortOrder","sortIcon","upNode","includes","createElement","className","active","downNode","cancelSort","triggerAsc","triggerDesc","sortTip","tooltipProps","Object","assign","title","renderProps","columnSortersClass","renderColumnTitleWrapper","renderSortTitle","target","onHeaderCell","col","_a","cell","call","originOnClick","onClick","originOKeyDown","onKeyDown","event","keyCode","ENTER","renderTitle","displayTitle","toString","tabIndex","ellipsis","stateToInfo","order","field","dataIndex","generateSorterInfo","activeSorters","filter","_ref2","length","lastIndex","getSortData","data","childrenColumnName","innerSorterStates","slice","sort","a","b","cloneData","runningSorters","_ref3","record1","record2","i","compareFn","compareResult","record","subRecords","useFilterSorter","props","mergedColumns","onSorterChange","setSortStates","useState","getColumnKeys","newKeys","item","Array","isArray","childKeys","apply","mergedSorterStates","useMemo","validate","collectedStates","mergedColumnsKeys","_ref4","validateStates","patchStates","state","multipleMode","columnTitleSorterProps","_b","sortColumns","_ref5","sortColumn","sortState","newSorterStates","_ref6","transformColumns","innerColumns","getSorters"],"sources":["E:/AICode/StockInsight/frontend/node_modules/antd/es/table/hooks/useSorter.js"],"sourcesContent":["\"use client\";\r\n\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport * as React from 'react';\r\nimport CaretDownOutlined from \"@ant-design/icons/es/icons/CaretDownOutlined\";\r\nimport CaretUpOutlined from \"@ant-design/icons/es/icons/CaretUpOutlined\";\r\nimport classNames from 'classnames';\r\nimport KeyCode from \"rc-util/es/KeyCode\";\r\nimport Tooltip from '../../tooltip';\r\nimport { getColumnKey, getColumnPos, renderColumnTitle, safeColumnTitle } from '../util';\r\nconst ASCEND = 'ascend';\r\nconst DESCEND = 'descend';\r\nconst getMultiplePriority = column => {\r\n  if (typeof column.sorter === 'object' && typeof column.sorter.multiple === 'number') {\r\n    return column.sorter.multiple;\r\n  }\r\n  return false;\r\n};\r\nconst getSortFunction = sorter => {\r\n  if (typeof sorter === 'function') {\r\n    return sorter;\r\n  }\r\n  if (sorter && typeof sorter === 'object' && sorter.compare) {\r\n    return sorter.compare;\r\n  }\r\n  return false;\r\n};\r\nconst nextSortDirection = (sortDirections, current) => {\r\n  if (!current) {\r\n    return sortDirections[0];\r\n  }\r\n  return sortDirections[sortDirections.indexOf(current) + 1];\r\n};\r\nconst collectSortStates = (columns, init, pos) => {\r\n  let sortStates = [];\r\n  const pushState = (column, columnPos) => {\r\n    sortStates.push({\r\n      column,\r\n      key: getColumnKey(column, columnPos),\r\n      multiplePriority: getMultiplePriority(column),\r\n      sortOrder: column.sortOrder\r\n    });\r\n  };\r\n  (columns || []).forEach((column, index) => {\r\n    const columnPos = getColumnPos(index, pos);\r\n    if (column.children) {\r\n      if ('sortOrder' in column) {\r\n        // Controlled\r\n        pushState(column, columnPos);\r\n      }\r\n      sortStates = [].concat(_toConsumableArray(sortStates), _toConsumableArray(collectSortStates(column.children, init, columnPos)));\r\n    } else if (column.sorter) {\r\n      if ('sortOrder' in column) {\r\n        // Controlled\r\n        pushState(column, columnPos);\r\n      } else if (init && column.defaultSortOrder) {\r\n        // Default sorter\r\n        sortStates.push({\r\n          column,\r\n          key: getColumnKey(column, columnPos),\r\n          multiplePriority: getMultiplePriority(column),\r\n          sortOrder: column.defaultSortOrder\r\n        });\r\n      }\r\n    }\r\n  });\r\n  return sortStates;\r\n};\r\nconst injectSorter = (prefixCls, columns, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, pos) => {\r\n  const finalColumns = (columns || []).map((column, index) => {\r\n    const columnPos = getColumnPos(index, pos);\r\n    let newColumn = column;\r\n    if (newColumn.sorter) {\r\n      const sortDirections = newColumn.sortDirections || defaultSortDirections;\r\n      const showSorterTooltip = newColumn.showSorterTooltip === undefined ? tableShowSorterTooltip : newColumn.showSorterTooltip;\r\n      const columnKey = getColumnKey(newColumn, columnPos);\r\n      const sorterState = sorterStates.find(({\r\n        key\r\n      }) => key === columnKey);\r\n      const sortOrder = sorterState ? sorterState.sortOrder : null;\r\n      const nextSortOrder = nextSortDirection(sortDirections, sortOrder);\r\n      let sorter;\r\n      if (column.sortIcon) {\r\n        sorter = column.sortIcon({\r\n          sortOrder\r\n        });\r\n      } else {\r\n        const upNode = sortDirections.includes(ASCEND) && (/*#__PURE__*/React.createElement(CaretUpOutlined, {\r\n          className: classNames(`${prefixCls}-column-sorter-up`, {\r\n            active: sortOrder === ASCEND\r\n          })\r\n        }));\r\n        const downNode = sortDirections.includes(DESCEND) && (/*#__PURE__*/React.createElement(CaretDownOutlined, {\r\n          className: classNames(`${prefixCls}-column-sorter-down`, {\r\n            active: sortOrder === DESCEND\r\n          })\r\n        }));\r\n        sorter = /*#__PURE__*/React.createElement(\"span\", {\r\n          className: classNames(`${prefixCls}-column-sorter`, {\r\n            [`${prefixCls}-column-sorter-full`]: !!(upNode && downNode)\r\n          })\r\n        }, /*#__PURE__*/React.createElement(\"span\", {\r\n          className: `${prefixCls}-column-sorter-inner`,\r\n          \"aria-hidden\": \"true\"\r\n        }, upNode, downNode));\r\n      }\r\n      const {\r\n        cancelSort,\r\n        triggerAsc,\r\n        triggerDesc\r\n      } = tableLocale || {};\r\n      let sortTip = cancelSort;\r\n      if (nextSortOrder === DESCEND) {\r\n        sortTip = triggerDesc;\r\n      } else if (nextSortOrder === ASCEND) {\r\n        sortTip = triggerAsc;\r\n      }\r\n      const tooltipProps = typeof showSorterTooltip === 'object' ? Object.assign({\r\n        title: sortTip\r\n      }, showSorterTooltip) : {\r\n        title: sortTip\r\n      };\r\n      newColumn = Object.assign(Object.assign({}, newColumn), {\r\n        className: classNames(newColumn.className, {\r\n          [`${prefixCls}-column-sort`]: sortOrder\r\n        }),\r\n        title: renderProps => {\r\n          const columnSortersClass = `${prefixCls}-column-sorters`;\r\n          const renderColumnTitleWrapper = /*#__PURE__*/React.createElement(\"span\", {\r\n            className: `${prefixCls}-column-title`\r\n          }, renderColumnTitle(column.title, renderProps));\r\n          const renderSortTitle = /*#__PURE__*/React.createElement(\"div\", {\r\n            className: columnSortersClass\r\n          }, renderColumnTitleWrapper, sorter);\r\n          if (showSorterTooltip) {\r\n            if (typeof showSorterTooltip !== 'boolean' && (showSorterTooltip === null || showSorterTooltip === void 0 ? void 0 : showSorterTooltip.target) === 'sorter-icon') {\r\n              return /*#__PURE__*/React.createElement(\"div\", {\r\n                className: `${columnSortersClass} ${prefixCls}-column-sorters-tooltip-target-sorter`\r\n              }, renderColumnTitleWrapper, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), sorter));\r\n            }\r\n            return /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, tooltipProps), renderSortTitle);\r\n          }\r\n          return renderSortTitle;\r\n        },\r\n        onHeaderCell: col => {\r\n          var _a;\r\n          const cell = ((_a = column.onHeaderCell) === null || _a === void 0 ? void 0 : _a.call(column, col)) || {};\r\n          const originOnClick = cell.onClick;\r\n          const originOKeyDown = cell.onKeyDown;\r\n          cell.onClick = event => {\r\n            triggerSorter({\r\n              column,\r\n              key: columnKey,\r\n              sortOrder: nextSortOrder,\r\n              multiplePriority: getMultiplePriority(column)\r\n            });\r\n            originOnClick === null || originOnClick === void 0 ? void 0 : originOnClick(event);\r\n          };\r\n          cell.onKeyDown = event => {\r\n            if (event.keyCode === KeyCode.ENTER) {\r\n              triggerSorter({\r\n                column,\r\n                key: columnKey,\r\n                sortOrder: nextSortOrder,\r\n                multiplePriority: getMultiplePriority(column)\r\n              });\r\n              originOKeyDown === null || originOKeyDown === void 0 ? void 0 : originOKeyDown(event);\r\n            }\r\n          };\r\n          const renderTitle = safeColumnTitle(column.title, {});\r\n          const displayTitle = renderTitle === null || renderTitle === void 0 ? void 0 : renderTitle.toString();\r\n          // Inform the screen-reader so it can tell the visually impaired user which column is sorted\r\n          if (sortOrder) {\r\n            cell['aria-sort'] = sortOrder === 'ascend' ? 'ascending' : 'descending';\r\n          }\r\n          cell['aria-label'] = displayTitle || '';\r\n          cell.className = classNames(cell.className, `${prefixCls}-column-has-sorters`);\r\n          cell.tabIndex = 0;\r\n          if (column.ellipsis) {\r\n            cell.title = (renderTitle !== null && renderTitle !== void 0 ? renderTitle : '').toString();\r\n          }\r\n          return cell;\r\n        }\r\n      });\r\n    }\r\n    if ('children' in newColumn) {\r\n      newColumn = Object.assign(Object.assign({}, newColumn), {\r\n        children: injectSorter(prefixCls, newColumn.children, sorterStates, triggerSorter, defaultSortDirections, tableLocale, tableShowSorterTooltip, columnPos)\r\n      });\r\n    }\r\n    return newColumn;\r\n  });\r\n  return finalColumns;\r\n};\r\nconst stateToInfo = sorterState => {\r\n  const {\r\n    column,\r\n    sortOrder\r\n  } = sorterState;\r\n  return {\r\n    column,\r\n    order: sortOrder,\r\n    field: column.dataIndex,\r\n    columnKey: column.key\r\n  };\r\n};\r\nconst generateSorterInfo = sorterStates => {\r\n  const activeSorters = sorterStates.filter(({\r\n    sortOrder\r\n  }) => sortOrder).map(stateToInfo);\r\n  // =========== Legacy compatible support ===========\r\n  // https://github.com/ant-design/ant-design/pull/19226\r\n  if (activeSorters.length === 0 && sorterStates.length) {\r\n    const lastIndex = sorterStates.length - 1;\r\n    return Object.assign(Object.assign({}, stateToInfo(sorterStates[lastIndex])), {\r\n      column: undefined,\r\n      order: undefined,\r\n      field: undefined,\r\n      columnKey: undefined\r\n    });\r\n  }\r\n  if (activeSorters.length <= 1) {\r\n    return activeSorters[0] || {};\r\n  }\r\n  return activeSorters;\r\n};\r\nexport const getSortData = (data, sortStates, childrenColumnName) => {\r\n  const innerSorterStates = sortStates.slice().sort((a, b) => b.multiplePriority - a.multiplePriority);\r\n  const cloneData = data.slice();\r\n  const runningSorters = innerSorterStates.filter(({\r\n    column: {\r\n      sorter\r\n    },\r\n    sortOrder\r\n  }) => getSortFunction(sorter) && sortOrder);\r\n  // Skip if no sorter needed\r\n  if (!runningSorters.length) {\r\n    return cloneData;\r\n  }\r\n  return cloneData.sort((record1, record2) => {\r\n    for (let i = 0; i < runningSorters.length; i += 1) {\r\n      const sorterState = runningSorters[i];\r\n      const {\r\n        column: {\r\n          sorter\r\n        },\r\n        sortOrder\r\n      } = sorterState;\r\n      const compareFn = getSortFunction(sorter);\r\n      if (compareFn && sortOrder) {\r\n        const compareResult = compareFn(record1, record2, sortOrder);\r\n        if (compareResult !== 0) {\r\n          return sortOrder === ASCEND ? compareResult : -compareResult;\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }).map(record => {\r\n    const subRecords = record[childrenColumnName];\r\n    if (subRecords) {\r\n      return Object.assign(Object.assign({}, record), {\r\n        [childrenColumnName]: getSortData(subRecords, sortStates, childrenColumnName)\r\n      });\r\n    }\r\n    return record;\r\n  });\r\n};\r\nconst useFilterSorter = props => {\r\n  const {\r\n    prefixCls,\r\n    mergedColumns,\r\n    sortDirections,\r\n    tableLocale,\r\n    showSorterTooltip,\r\n    onSorterChange\r\n  } = props;\r\n  const [sortStates, setSortStates] = React.useState(() => collectSortStates(mergedColumns, true));\r\n  const getColumnKeys = (columns, pos) => {\r\n    const newKeys = [];\r\n    columns.forEach((item, index) => {\r\n      const columnPos = getColumnPos(index, pos);\r\n      newKeys.push(getColumnKey(item, columnPos));\r\n      if (Array.isArray(item.children)) {\r\n        const childKeys = getColumnKeys(item.children, columnPos);\r\n        newKeys.push.apply(newKeys, _toConsumableArray(childKeys));\r\n      }\r\n    });\r\n    return newKeys;\r\n  };\r\n  const mergedSorterStates = React.useMemo(() => {\r\n    let validate = true;\r\n    const collectedStates = collectSortStates(mergedColumns, false);\r\n    // Return if not controlled\r\n    if (!collectedStates.length) {\r\n      const mergedColumnsKeys = getColumnKeys(mergedColumns);\r\n      return sortStates.filter(({\r\n        key\r\n      }) => mergedColumnsKeys.includes(key));\r\n    }\r\n    const validateStates = [];\r\n    function patchStates(state) {\r\n      if (validate) {\r\n        validateStates.push(state);\r\n      } else {\r\n        validateStates.push(Object.assign(Object.assign({}, state), {\r\n          sortOrder: null\r\n        }));\r\n      }\r\n    }\r\n    let multipleMode = null;\r\n    collectedStates.forEach(state => {\r\n      if (multipleMode === null) {\r\n        patchStates(state);\r\n        if (state.sortOrder) {\r\n          if (state.multiplePriority === false) {\r\n            validate = false;\r\n          } else {\r\n            multipleMode = true;\r\n          }\r\n        }\r\n      } else if (multipleMode && state.multiplePriority !== false) {\r\n        patchStates(state);\r\n      } else {\r\n        validate = false;\r\n        patchStates(state);\r\n      }\r\n    });\r\n    return validateStates;\r\n  }, [mergedColumns, sortStates]);\r\n  // Get render columns title required props\r\n  const columnTitleSorterProps = React.useMemo(() => {\r\n    var _a, _b;\r\n    const sortColumns = mergedSorterStates.map(({\r\n      column,\r\n      sortOrder\r\n    }) => ({\r\n      column,\r\n      order: sortOrder\r\n    }));\r\n    return {\r\n      sortColumns,\r\n      // Legacy\r\n      sortColumn: (_a = sortColumns[0]) === null || _a === void 0 ? void 0 : _a.column,\r\n      sortOrder: (_b = sortColumns[0]) === null || _b === void 0 ? void 0 : _b.order\r\n    };\r\n  }, [mergedSorterStates]);\r\n  const triggerSorter = sortState => {\r\n    let newSorterStates;\r\n    if (sortState.multiplePriority === false || !mergedSorterStates.length || mergedSorterStates[0].multiplePriority === false) {\r\n      newSorterStates = [sortState];\r\n    } else {\r\n      newSorterStates = [].concat(_toConsumableArray(mergedSorterStates.filter(({\r\n        key\r\n      }) => key !== sortState.key)), [sortState]);\r\n    }\r\n    setSortStates(newSorterStates);\r\n    onSorterChange(generateSorterInfo(newSorterStates), newSorterStates);\r\n  };\r\n  const transformColumns = innerColumns => injectSorter(prefixCls, innerColumns, mergedSorterStates, triggerSorter, sortDirections, tableLocale, showSorterTooltip);\r\n  const getSorters = () => generateSorterInfo(mergedSorterStates);\r\n  return [transformColumns, mergedSorterStates, columnTitleSorterProps, getSorters];\r\n};\r\nexport default useFilterSorter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}