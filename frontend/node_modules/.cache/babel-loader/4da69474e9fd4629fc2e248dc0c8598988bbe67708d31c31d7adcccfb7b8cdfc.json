{"ast":null,"code":"var _jsxFileName = \"E:\\\\AICode\\\\StockInsight\\\\frontend\\\\src\\\\routes\\\\index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\n * 路由配置文件\n */\n\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { tokenManager } from '../services/api';\n\n// 布局组件\nimport AuthLayout from '../layouts/AuthLayout';\nimport DashboardLayout from '../layouts/DashboardLayout';\n\n// 页面组件\nimport HomePage from '../pages/HomePage';\nimport LoginPage from '../pages/LoginPage';\nimport RegisterPage from '../pages/RegisterPage';\nimport DashboardPage from '../pages/DashboardPage';\n\n// 路由守卫组件 - 保护需要登录的路由\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // 检查token是否存在\n  useEffect(() => {\n    // 如果没有token，重定向到登录页面\n    if (!isLoading && !tokenManager.isAuthenticated()) {\n      console.log('未检测到有效token，重定向到登录页面');\n      navigate('/login', {\n        replace: true\n      });\n    }\n  }, [isLoading, navigate]);\n\n  // 如果正在加载认证状态，显示加载中\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u52A0\\u8F7D\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 如果未登录，重定向到登录页面\n  return tokenManager.isAuthenticated() ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 53\n  }, this);\n};\n\n// 公共路由组件 - 已登录用户会被重定向到仪表盘\n_s(ProtectedRoute, \"yoRMR5p13DEmhMY1jTIFS3Q/c74=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = ProtectedRoute;\nconst PublicRoute = ({\n  element\n}) => {\n  _s2();\n  const {\n    isAuthenticated,\n    isLoading\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // 检查token是否存在\n  useEffect(() => {\n    // 如果有token，重定向到仪表盘\n    if (!isLoading && tokenManager.isAuthenticated()) {\n      console.log('检测到有效token，重定向到仪表盘');\n      navigate('/dashboard', {\n        replace: true\n      });\n    }\n  }, [isLoading, navigate]);\n\n  // 如果正在加载认证状态，显示加载中\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u52A0\\u8F7D\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 如果已登录，重定向到仪表盘\n  return tokenManager.isAuthenticated() ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/dashboard\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 43\n  }, this) : element;\n};\n\n// 路由配置组件\n_s2(PublicRoute, \"yoRMR5p13DEmhMY1jTIFS3Q/c74=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c2 = PublicRoute;\nconst AppRoutes = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(AuthLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n            element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(DashboardLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            element: /*#__PURE__*/_jsxDEV(DashboardPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c3 = AppRoutes;\nexport default AppRoutes;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"PublicRoute\");\n$RefreshReg$(_c3, \"AppRoutes\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Routes","Route","Navigate","useNavigate","useAuth","tokenManager","AuthLayout","DashboardLayout","HomePage","LoginPage","RegisterPage","DashboardPage","jsxDEV","_jsxDEV","ProtectedRoute","element","_s","isAuthenticated","isLoading","navigate","console","log","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","PublicRoute","_s2","_c2","AppRoutes","path","_c3","$RefreshReg$"],"sources":["E:/AICode/StockInsight/frontend/src/routes/index.tsx"],"sourcesContent":["/**\n * 路由配置文件\n */\n\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { tokenManager } from '../services/api';\n\n// 布局组件\nimport AuthLayout from '../layouts/AuthLayout';\nimport DashboardLayout from '../layouts/DashboardLayout';\n\n// 页面组件\nimport HomePage from '../pages/HomePage';\nimport LoginPage from '../pages/LoginPage';\nimport RegisterPage from '../pages/RegisterPage';\nimport DashboardPage from '../pages/DashboardPage';\n\n// 路由守卫组件 - 保护需要登录的路由\nconst ProtectedRoute: React.FC<{ element: React.ReactElement }> = ({ element }) => {\n  const { isAuthenticated, isLoading } = useAuth();\n  const navigate = useNavigate();\n\n  // 检查token是否存在\n  useEffect(() => {\n    // 如果没有token，重定向到登录页面\n    if (!isLoading && !tokenManager.isAuthenticated()) {\n      console.log('未检测到有效token，重定向到登录页面');\n      navigate('/login', { replace: true });\n    }\n  }, [isLoading, navigate]);\n\n  // 如果正在加载认证状态，显示加载中\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>加载中...</p>\n      </div>\n    );\n  }\n\n  // 如果未登录，重定向到登录页面\n  return tokenManager.isAuthenticated() ? element : <Navigate to=\"/login\" replace />;\n};\n\n// 公共路由组件 - 已登录用户会被重定向到仪表盘\nconst PublicRoute: React.FC<{ element: React.ReactElement }> = ({ element }) => {\n  const { isAuthenticated, isLoading } = useAuth();\n  const navigate = useNavigate();\n\n  // 检查token是否存在\n  useEffect(() => {\n    // 如果有token，重定向到仪表盘\n    if (!isLoading && tokenManager.isAuthenticated()) {\n      console.log('检测到有效token，重定向到仪表盘');\n      navigate('/dashboard', { replace: true });\n    }\n  }, [isLoading, navigate]);\n\n  // 如果正在加载认证状态，显示加载中\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>加载中...</p>\n      </div>\n    );\n  }\n\n  // 如果已登录，重定向到仪表盘\n  return tokenManager.isAuthenticated() ? <Navigate to=\"/dashboard\" replace /> : element;\n};\n\n// 路由配置组件\nconst AppRoutes: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        {/* 主页路由 */}\n        <Route path=\"/\" element={<HomePage />} />\n        \n        {/* 认证相关路由 - 使用AuthLayout */}\n        <Route element={<AuthLayout />}>\n          <Route path=\"/login\" element={<PublicRoute element={<LoginPage />} />} />\n          <Route path=\"/register\" element={<PublicRoute element={<RegisterPage />} />} />\n        </Route>\n        \n        {/* 仪表盘相关路由 - 使用DashboardLayout */}\n        <Route element={<DashboardLayout />}>\n          <Route path=\"/dashboard\" element={<ProtectedRoute element={<DashboardPage />} />} />\n          {/* 可以添加更多仪表盘相关的子路由 */}\n        </Route>\n        \n        {/* 404页面 */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}