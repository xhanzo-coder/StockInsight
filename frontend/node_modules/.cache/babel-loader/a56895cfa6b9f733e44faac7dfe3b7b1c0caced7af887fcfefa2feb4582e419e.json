{"ast":null,"code":"var _jsxFileName = \"E:\\\\AICode\\\\StockInsight\\\\frontend\\\\src\\\\components\\\\auth\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\n/**\n * 路由保护组件\n * 用于保护需要认证的路由\n */\n\nimport React from 'react';\nimport { Spin } from 'antd';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { AuthPage } from '../../pages/AuthPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading\n  } = useAuth();\n\n  // 如果正在加载，显示加载状态\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        backgroundColor: '#f5f5f5'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\",\n        tip: \"\\u52A0\\u8F7D\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 如果未认证，显示登录页面\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 如果已认证，显示受保护的内容\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"yb/FJYAIXt7wZoU4a4YvGQ4Nlsc=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Spin","useAuth","AuthPage","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","_s","isAuthenticated","isLoading","style","display","justifyContent","alignItems","height","backgroundColor","size","tip","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/AICode/StockInsight/frontend/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["/**\n * 路由保护组件\n * 用于保护需要认证的路由\n */\n\nimport React from 'react';\nimport { Spin } from 'antd';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { AuthPage } from '../../pages/AuthPage';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  // 如果正在加载，显示加载状态\n  if (isLoading) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh',\n          backgroundColor: '#f5f5f5',\n        }}\n      >\n        <Spin size=\"large\" tip=\"加载中...\" />\n      </div>\n    );\n  }\n\n  // 如果未认证，显示登录页面\n  if (!isAuthenticated) {\n    return <AuthPage />;\n  }\n\n  // 如果已认证，显示受保护的内容\n  return <>{children}</>;\n};"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMhD,OAAO,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGV,OAAO,CAAC,CAAC;;EAEhD;EACA,IAAIU,SAAS,EAAE;IACb,oBACEP,OAAA;MACEQ,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE,OAAO;QACfC,eAAe,EAAE;MACnB,CAAE;MAAAT,QAAA,eAEFJ,OAAA,CAACJ,IAAI;QAACkB,IAAI,EAAC,OAAO;QAACC,GAAG,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;;EAEA;EACA,IAAI,CAACb,eAAe,EAAE;IACpB,oBAAON,OAAA,CAACF,QAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;;EAEA;EACA,oBAAOnB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CA3BWF,cAA6C;EAAA,QACjBN,OAAO;AAAA;AAAAuB,EAAA,GADnCjB,cAA6C;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}