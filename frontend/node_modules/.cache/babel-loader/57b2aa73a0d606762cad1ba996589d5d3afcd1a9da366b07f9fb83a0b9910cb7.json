{"ast":null,"code":"var _jsxFileName = \"E:\\\\AICode\\\\StockInsight\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport DashboardPage from './pages/DashboardPage';\nimport HomePage from './pages/HomePage';\nimport ConfirmModal from './components/ConfirmModal';\nimport Toast from './components/Toast';\nimport './App.css';\n\n/**\r\n * App组件 - 应用入口点\r\n * 使用最简单的认证逻辑，直接在App组件中处理\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userInfo, setUserInfo] = useState(null);\n\n  // 弹窗状态\n  const [showLogoutConfirm, setShowLogoutConfirm] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  useEffect(() => {\n    // 检查本地存储中的登录状态（使用与api.ts一致的键名）\n    const token = localStorage.getItem('auth_token');\n    const storedUserInfo = localStorage.getItem('userInfo');\n    if (token) {\n      setIsLoggedIn(true);\n      if (storedUserInfo) {\n        try {\n          setUserInfo(JSON.parse(storedUserInfo));\n        } catch (error) {\n          console.error('解析用户信息失败:', error);\n        }\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const handleLogin = loginStatus => {\n    setIsLoggedIn(loginStatus);\n    if (loginStatus) {\n      // 登录成功时，重新读取用户信息\n      const storedUserInfo = localStorage.getItem('userInfo');\n      if (storedUserInfo) {\n        try {\n          setUserInfo(JSON.parse(storedUserInfo));\n        } catch (error) {\n          console.error('解析用户信息失败:', error);\n        }\n      }\n    } else {\n      // 登出时清除用户信息\n      setUserInfo(null);\n    }\n  };\n  const handleLogout = () => {\n    setShowLogoutConfirm(true);\n  };\n  const confirmLogout = () => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('userInfo');\n    setIsLoggedIn(false);\n    setUserInfo(null);\n    setShowLogoutConfirm(false);\n    setToastMessage('已成功退出登录');\n    setShowToast(true);\n  };\n  const cancelLogout = () => {\n    setShowLogoutConfirm(false);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        fontSize: '18px'\n      },\n      children: \"\\u6B63\\u5728\\u68C0\\u67E5\\u767B\\u5F55\\u72B6\\u6001...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            isLoggedIn: isLoggedIn,\n            userInfo: userInfo || undefined,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/dashboard\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/dashboard\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(DashboardPage, {\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n        isOpen: showLogoutConfirm,\n        title: \"\\u786E\\u8BA4\\u9000\\u51FA\",\n        message: \"\\u60A8\\u786E\\u5B9A\\u8981\\u9000\\u51FA\\u767B\\u5F55\\u5417\\uFF1F\\u9000\\u51FA\\u540E\\u9700\\u8981\\u91CD\\u65B0\\u767B\\u5F55\\u624D\\u80FD\\u8BBF\\u95EE\\u4EEA\\u8868\\u76D8\\u3002\",\n        confirmText: \"\\u9000\\u51FA\\u767B\\u5F55\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onConfirm: confirmLogout,\n        onCancel: cancelLogout,\n        type: \"warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast, {\n        isVisible: showToast,\n        message: toastMessage,\n        type: \"success\",\n        onClose: () => setShowToast(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oczND9eIABOB62Sp6O8w8PeLu6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","LoginPage","RegisterPage","DashboardPage","HomePage","ConfirmModal","Toast","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","userInfo","setUserInfo","showLogoutConfirm","setShowLogoutConfirm","showToast","setShowToast","toastMessage","setToastMessage","token","localStorage","getItem","storedUserInfo","JSON","parse","error","console","handleLogin","loginStatus","handleLogout","confirmLogout","removeItem","cancelLogout","style","display","justifyContent","alignItems","height","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","undefined","onLogout","to","replace","onLogin","isOpen","title","message","confirmText","cancelText","onConfirm","onCancel","type","isVisible","onClose","_c","$RefreshReg$"],"sources":["E:/AICode/StockInsight/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport DashboardPage from './pages/DashboardPage';\r\nimport HomePage from './pages/HomePage';\r\nimport ConfirmModal from './components/ConfirmModal';\r\nimport Toast from './components/Toast';\r\nimport './App.css';\r\n\r\n/**\r\n * App组件 - 应用入口点\r\n * 使用最简单的认证逻辑，直接在App组件中处理\r\n */\r\nconst App: React.FC = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [userInfo, setUserInfo] = useState<{ username: string; email?: string } | null>(null);\r\n  \r\n  // 弹窗状态\r\n  const [showLogoutConfirm, setShowLogoutConfirm] = useState<boolean>(false);\r\n  const [showToast, setShowToast] = useState<boolean>(false);\r\n  const [toastMessage, setToastMessage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    // 检查本地存储中的登录状态（使用与api.ts一致的键名）\r\n    const token = localStorage.getItem('auth_token');\r\n    const storedUserInfo = localStorage.getItem('userInfo');\r\n    \r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      if (storedUserInfo) {\r\n        try {\r\n          setUserInfo(JSON.parse(storedUserInfo));\r\n        } catch (error) {\r\n          console.error('解析用户信息失败:', error);\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleLogin = (loginStatus: boolean) => {\r\n    setIsLoggedIn(loginStatus);\r\n    if (loginStatus) {\r\n      // 登录成功时，重新读取用户信息\r\n      const storedUserInfo = localStorage.getItem('userInfo');\r\n      if (storedUserInfo) {\r\n        try {\r\n          setUserInfo(JSON.parse(storedUserInfo));\r\n        } catch (error) {\r\n          console.error('解析用户信息失败:', error);\r\n        }\r\n      }\r\n    } else {\r\n      // 登出时清除用户信息\r\n      setUserInfo(null);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setShowLogoutConfirm(true);\r\n  };\r\n\r\n  const confirmLogout = () => {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('userInfo');\r\n    setIsLoggedIn(false);\r\n    setUserInfo(null);\r\n    setShowLogoutConfirm(false);\r\n    setToastMessage('已成功退出登录');\r\n    setShowToast(true);\r\n  };\r\n\r\n  const cancelLogout = () => {\r\n    setShowLogoutConfirm(false);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div style={{ \r\n      display: 'flex', \r\n      justifyContent: 'center', \r\n      alignItems: 'center', \r\n      height: '100vh',\r\n      fontSize: '18px'\r\n    }}>正在检查登录状态...</div>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<HomePage isLoggedIn={isLoggedIn} userInfo={userInfo || undefined} onLogout={handleLogout} />}\r\n          />\r\n          <Route\r\n            path=\"/login\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <Navigate to=\"/dashboard\" replace />\r\n              ) : (\r\n                <LoginPage onLogin={setIsLoggedIn} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/register\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <Navigate to=\"/dashboard\" replace />\r\n              ) : (\r\n                <RegisterPage />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/dashboard\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <DashboardPage onLogout={handleLogout} />\r\n              ) : (\r\n                <Navigate to=\"/login\" replace />\r\n              )\r\n            }\r\n          />\r\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n        </Routes>\r\n\r\n        {/* 确认退出登录弹窗 */}\r\n        <ConfirmModal\r\n          isOpen={showLogoutConfirm}\r\n          title=\"确认退出\"\r\n          message=\"您确定要退出登录吗？退出后需要重新登录才能访问仪表盘。\"\r\n          confirmText=\"退出登录\"\r\n          cancelText=\"取消\"\r\n          onConfirm={confirmLogout}\r\n          onCancel={cancelLogout}\r\n          type=\"warning\"\r\n        />\r\n\r\n        {/* Toast 提示 */}\r\n        <Toast\r\n          isVisible={showToast}\r\n          message={toastMessage}\r\n          type=\"success\"\r\n          onClose={() => setShowToast(false)}\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}