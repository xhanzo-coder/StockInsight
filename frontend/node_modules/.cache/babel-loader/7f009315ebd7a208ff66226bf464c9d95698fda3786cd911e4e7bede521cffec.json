{"ast":null,"code":"// 格式化价格显示\nexport const formatPrice=price=>{if(price===null||price===undefined)return'--';return`¥${price.toFixed(2)}`;};// 格式化百分比显示\nexport const formatPercent=percent=>{if(percent===null||percent===undefined)return'--';const sign=percent>0?'+':'';return`${sign}${percent.toFixed(2)}%`;};// 格式化数值显示\nexport const formatNumber=function(num){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;if(num===null||num===undefined)return'--';return num.toFixed(decimals);};// 格式化市值显示\nexport const formatMarketCap=marketCap=>{if(!marketCap)return'--';return marketCap;};// 格式化时间显示\nexport const formatTime=timeStr=>{if(!timeStr)return'--';try{const date=new Date(timeStr);return date.toLocaleString('zh-CN',{year:'numeric',month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'});}catch{return timeStr;}};// 获取涨跌颜色类名\nexport const getPriceColorClass=value=>{if(value===null||value===undefined||value===0)return'';return value>0?'positive':'negative';};// 获取涨跌颜色\nexport const getPriceColor=value=>{if(value===null||value===undefined||value===0)return'#ffffff';return value>0?'#22c55e':'#ef4444';};// 防抖函数\nexport const debounce=(func,wait)=>{let timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}clearTimeout(timeout);timeout=setTimeout(()=>func(...args),wait);};};// 节流函数\nexport const throttle=(func,limit)=>{let inThrottle;return function(){if(!inThrottle){func(...arguments);inThrottle=true;setTimeout(()=>inThrottle=false,limit);}};};// 计算价格差异\nexport const calculatePriceDiff=(theoretical,current)=>{if(theoretical===null||theoretical===undefined||current===null||current===undefined){return null;}return theoretical-current;};// 格式化价格差异显示\nexport const formatPriceDiff=(theoretical,current)=>{const diff=calculatePriceDiff(theoretical,current);if(diff===null)return'--';const sign=diff>0?'+':'';return`${sign}${diff.toFixed(2)}`;};// 验证股票代码格式\nexport const isValidStockCode=code=>{return /^\\d{6}$/.test(code);};// 生成随机ID\nexport const generateId=()=>{return Math.random().toString(36).substr(2,9);};// 深拷贝对象\nexport const deepClone=obj=>{return JSON.parse(JSON.stringify(obj));};// 获取表格排序图标\nexport const getSortIcon=sortOrder=>{if(sortOrder==='ascend')return'↑';if(sortOrder==='descend')return'↓';return'';};// 处理API错误\nexport const handleApiError=error=>{var _error$response,_error$response$data,_error$response2,_error$response2$data;if((_error$response=error.response)!==null&&_error$response!==void 0&&(_error$response$data=_error$response.data)!==null&&_error$response$data!==void 0&&_error$response$data.error){return error.response.data.error;}if((_error$response2=error.response)!==null&&_error$response2!==void 0&&(_error$response2$data=_error$response2.data)!==null&&_error$response2$data!==void 0&&_error$response2$data.message){return error.response.data.message;}if(error.message){return error.message;}return'请求失败，请稍后重试';};// 格式化股利支付率\nexport const formatDividendRatio=ratio=>{if(ratio===null||ratio===undefined)return'--';return`${(ratio*100).toFixed(1)}%`;};// 格式化ROE显示\nexport const formatROE=roe=>{if(roe===null||roe===undefined)return'--';// ROE通常以百分比形式返回，直接显示\nreturn`${roe.toFixed(2)}%`;};// 获取优质股票标准\nexport const isQualityStock=(pe,roe)=>{return pe!==null&&pe!==undefined&&pe<15&&roe!==null&&roe!==undefined&&roe>15;};// 计算统计数据\nexport const calculateStats=stocks=>{if(!stocks||stocks.length===0){return{totalCount:0,avgPE:0,qualityCount:0,risingCount:0,fallingCount:0,avgROE:0,lastUpdate:new Date().toLocaleTimeString('zh-CN',{hour12:false})};}const validPEs=stocks.map(s=>s.pe_ratio_ttm).filter(pe=>pe!==null&&pe!==undefined&&!isNaN(pe));const avgPE=validPEs.length>0?validPEs.reduce((sum,pe)=>sum+pe,0)/validPEs.length:0;const validROEs=stocks.map(s=>s.roe).filter(roe=>roe!==null&&roe!==undefined&&!isNaN(roe));const avgROE=validROEs.length>0?validROEs.reduce((sum,roe)=>sum+roe,0)/validROEs.length:0;const qualityCount=stocks.filter(stock=>isQualityStock(stock.pe_ratio_ttm,stock.roe)).length;const risingCount=stocks.filter(stock=>stock.change_percent&&stock.change_percent>0).length;const fallingCount=stocks.filter(stock=>stock.change_percent&&stock.change_percent<0).length;return{totalCount:stocks.length,avgPE:Number(avgPE.toFixed(1)),avgROE:Number(avgROE.toFixed(1)),qualityCount,risingCount,fallingCount,lastUpdate:new Date().toLocaleTimeString('zh-CN',{hour12:false})};};","map":{"version":3,"names":["formatPrice","price","undefined","toFixed","formatPercent","percent","sign","formatNumber","num","decimals","arguments","length","formatMarketCap","marketCap","formatTime","timeStr","date","Date","toLocaleString","year","month","day","hour","minute","getPriceColorClass","value","getPriceColor","debounce","func","wait","timeout","_len","args","Array","_key","clearTimeout","setTimeout","throttle","limit","inThrottle","calculatePriceDiff","theoretical","current","formatPriceDiff","diff","isValidStockCode","code","test","generateId","Math","random","toString","substr","deepClone","obj","JSON","parse","stringify","getSortIcon","sortOrder","handleApiError","error","_error$response","_error$response$data","_error$response2","_error$response2$data","response","data","message","formatDividendRatio","ratio","formatROE","roe","isQualityStock","pe","calculateStats","stocks","totalCount","avgPE","qualityCount","risingCount","fallingCount","avgROE","lastUpdate","toLocaleTimeString","hour12","validPEs","map","s","pe_ratio_ttm","filter","isNaN","reduce","sum","validROEs","stock","change_percent","Number"],"sources":["E:/AICode/StockInsight/frontend/src/utils/helpers.ts"],"sourcesContent":["// 格式化价格显示\nexport const formatPrice = (price: number | null | undefined): string => {\n  if (price === null || price === undefined) return '--';\n  return `¥${price.toFixed(2)}`;\n};\n\n// 格式化百分比显示\nexport const formatPercent = (percent: number | null | undefined): string => {\n  if (percent === null || percent === undefined) return '--';\n  const sign = percent > 0 ? '+' : '';\n  return `${sign}${percent.toFixed(2)}%`;\n};\n\n// 格式化数值显示\nexport const formatNumber = (num: number | null | undefined, decimals: number = 2): string => {\n  if (num === null || num === undefined) return '--';\n  return num.toFixed(decimals);\n};\n\n// 格式化市值显示\nexport const formatMarketCap = (marketCap: string | null | undefined): string => {\n  if (!marketCap) return '--';\n  return marketCap;\n};\n\n// 格式化时间显示\nexport const formatTime = (timeStr: string | null | undefined): string => {\n  if (!timeStr) return '--';\n  try {\n    const date = new Date(timeStr);\n    return date.toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  } catch {\n    return timeStr;\n  }\n};\n\n// 获取涨跌颜色类名\nexport const getPriceColorClass = (value: number | null | undefined): string => {\n  if (value === null || value === undefined || value === 0) return '';\n  return value > 0 ? 'positive' : 'negative';\n};\n\n// 获取涨跌颜色\nexport const getPriceColor = (value: number | null | undefined): string => {\n  if (value === null || value === undefined || value === 0) return '#ffffff';\n  return value > 0 ? '#22c55e' : '#ef4444';\n};\n\n// 防抖函数\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n// 节流函数\nexport const throttle = <T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n\n// 计算价格差异\nexport const calculatePriceDiff = (\n  theoretical: number | null | undefined,\n  current: number | null | undefined\n): number | null => {\n  if (theoretical === null || theoretical === undefined || \n      current === null || current === undefined) {\n    return null;\n  }\n  return theoretical - current;\n};\n\n// 格式化价格差异显示\nexport const formatPriceDiff = (\n  theoretical: number | null | undefined,\n  current: number | null | undefined\n): string => {\n  const diff = calculatePriceDiff(theoretical, current);\n  if (diff === null) return '--';\n  const sign = diff > 0 ? '+' : '';\n  return `${sign}${diff.toFixed(2)}`;\n};\n\n// 验证股票代码格式\nexport const isValidStockCode = (code: string): boolean => {\n  return /^\\d{6}$/.test(code);\n};\n\n// 生成随机ID\nexport const generateId = (): string => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// 深拷贝对象\nexport const deepClone = <T>(obj: T): T => {\n  return JSON.parse(JSON.stringify(obj));\n};\n\n// 获取表格排序图标\nexport const getSortIcon = (sortOrder: 'ascend' | 'descend' | null): string => {\n  if (sortOrder === 'ascend') return '↑';\n  if (sortOrder === 'descend') return '↓';\n  return '';\n};\n\n// 处理API错误\nexport const handleApiError = (error: any): string => {\n  if (error.response?.data?.error) {\n    return error.response.data.error;\n  }\n  if (error.response?.data?.message) {\n    return error.response.data.message;\n  }\n  if (error.message) {\n    return error.message;\n  }\n  return '请求失败，请稍后重试';\n};\n\n// 格式化股利支付率\nexport const formatDividendRatio = (ratio: number | null | undefined): string => {\n  if (ratio === null || ratio === undefined) return '--';\n  return `${(ratio * 100).toFixed(1)}%`;\n};\n\n// 格式化ROE显示\nexport const formatROE = (roe: number | null | undefined): string => {\n  if (roe === null || roe === undefined) return '--';\n  // ROE通常以百分比形式返回，直接显示\n  return `${roe.toFixed(2)}%`;\n};\n\n// 获取优质股票标准\nexport const isQualityStock = (pe: number | null | undefined, roe: number | null | undefined): boolean => {\n  return (pe !== null && pe !== undefined && pe < 15) && \n         (roe !== null && roe !== undefined && roe > 15);\n};\n\n// 计算统计数据\nexport const calculateStats = (stocks: any[]) => {\n  if (!stocks || stocks.length === 0) {\n    return {\n      totalCount: 0,\n      avgPE: 0,\n      qualityCount: 0,\n      risingCount: 0,\n      fallingCount: 0,\n      avgROE: 0,\n      lastUpdate: new Date().toLocaleTimeString('zh-CN', { hour12: false })\n    };\n  }\n\n  const validPEs = stocks\n    .map(s => s.pe_ratio_ttm)\n    .filter(pe => pe !== null && pe !== undefined && !isNaN(pe));\n  \n  const avgPE = validPEs.length > 0 \n    ? validPEs.reduce((sum, pe) => sum + pe, 0) / validPEs.length \n    : 0;\n\n  const validROEs = stocks\n    .map(s => s.roe)\n    .filter(roe => roe !== null && roe !== undefined && !isNaN(roe));\n  \n  const avgROE = validROEs.length > 0 \n    ? validROEs.reduce((sum, roe) => sum + roe, 0) / validROEs.length \n    : 0;\n\n  const qualityCount = stocks.filter(stock => \n    isQualityStock(stock.pe_ratio_ttm, stock.roe)\n  ).length;\n\n  const risingCount = stocks.filter(stock => \n    stock.change_percent && stock.change_percent > 0\n  ).length;\n\n  const fallingCount = stocks.filter(stock => \n    stock.change_percent && stock.change_percent < 0\n  ).length;\n\n  return {\n    totalCount: stocks.length,\n    avgPE: Number(avgPE.toFixed(1)),\n    avgROE: Number(avgROE.toFixed(1)),\n    qualityCount,\n    risingCount,\n    fallingCount,\n    lastUpdate: new Date().toLocaleTimeString('zh-CN', { hour12: false })\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}