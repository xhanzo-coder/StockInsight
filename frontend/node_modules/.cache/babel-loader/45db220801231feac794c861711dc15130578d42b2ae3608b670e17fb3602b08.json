{"ast":null,"code":"import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { alignItemsValues, flexWrapValues, justifyContentValues } from '../utils';\nconst genFlexStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'flex',\n      margin: 0,\n      padding: 0,\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&:empty': {\n        display: 'none'\n      }\n    }\n  };\n};\nconst genFlexGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-small': {\n        gap: token.flexGapSM\n      },\n      '&-gap-middle': {\n        gap: token.flexGap\n      },\n      '&-gap-large': {\n        gap: token.flexGapLG\n      }\n    }\n  };\n};\nconst genFlexWrapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const wrapStyle = {};\n  flexWrapValues.forEach(value => {\n    wrapStyle[`${componentCls}-wrap-${value}`] = {\n      flexWrap: value\n    };\n  });\n  return wrapStyle;\n};\nconst genAlignItemsStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const alignStyle = {};\n  alignItemsValues.forEach(value => {\n    alignStyle[`${componentCls}-align-${value}`] = {\n      alignItems: value\n    };\n  });\n  return alignStyle;\n};\nconst genJustifyContentStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const justifyStyle = {};\n  justifyContentValues.forEach(value => {\n    justifyStyle[`${componentCls}-justify-${value}`] = {\n      justifyContent: value\n    };\n  });\n  return justifyStyle;\n};\nexport const prepareComponentToken = () => ({});\nexport default genStyleHooks('Flex', token => {\n  const {\n    paddingXS,\n    padding,\n    paddingLG\n  } = token;\n  const flexToken = mergeToken(token, {\n    flexGapSM: paddingXS,\n    flexGap: padding,\n    flexGapLG: paddingLG\n  });\n  return [genFlexStyle(flexToken), genFlexGapStyle(flexToken), genFlexWrapStyle(flexToken), genAlignItemsStyle(flexToken), genJustifyContentStyle(flexToken)];\n}, prepareComponentToken, {\n  // Flex component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/46403\n  resetStyle: false\n});","map":{"version":3,"names":["genStyleHooks","mergeToken","alignItemsValues","flexWrapValues","justifyContentValues","genFlexStyle","token","componentCls","display","margin","padding","flexDirection","direction","genFlexGapStyle","gap","flexGapSM","flexGap","flexGapLG","genFlexWrapStyle","wrapStyle","forEach","value","flexWrap","genAlignItemsStyle","alignStyle","alignItems","genJustifyContentStyle","justifyStyle","justifyContent","prepareComponentToken","paddingXS","paddingLG","flexToken","resetStyle"],"sources":["E:/AICode/StockInsight/frontend/node_modules/antd/es/flex/style/index.js"],"sourcesContent":["import { genStyleHooks, mergeToken } from '../../theme/internal';\r\nimport { alignItemsValues, flexWrapValues, justifyContentValues } from '../utils';\r\nconst genFlexStyle = token => {\r\n  const {\r\n    componentCls\r\n  } = token;\r\n  return {\r\n    [componentCls]: {\r\n      display: 'flex',\r\n      margin: 0,\r\n      padding: 0,\r\n      '&-vertical': {\r\n        flexDirection: 'column'\r\n      },\r\n      '&-rtl': {\r\n        direction: 'rtl'\r\n      },\r\n      '&:empty': {\r\n        display: 'none'\r\n      }\r\n    }\r\n  };\r\n};\r\nconst genFlexGapStyle = token => {\r\n  const {\r\n    componentCls\r\n  } = token;\r\n  return {\r\n    [componentCls]: {\r\n      '&-gap-small': {\r\n        gap: token.flexGapSM\r\n      },\r\n      '&-gap-middle': {\r\n        gap: token.flexGap\r\n      },\r\n      '&-gap-large': {\r\n        gap: token.flexGapLG\r\n      }\r\n    }\r\n  };\r\n};\r\nconst genFlexWrapStyle = token => {\r\n  const {\r\n    componentCls\r\n  } = token;\r\n  const wrapStyle = {};\r\n  flexWrapValues.forEach(value => {\r\n    wrapStyle[`${componentCls}-wrap-${value}`] = {\r\n      flexWrap: value\r\n    };\r\n  });\r\n  return wrapStyle;\r\n};\r\nconst genAlignItemsStyle = token => {\r\n  const {\r\n    componentCls\r\n  } = token;\r\n  const alignStyle = {};\r\n  alignItemsValues.forEach(value => {\r\n    alignStyle[`${componentCls}-align-${value}`] = {\r\n      alignItems: value\r\n    };\r\n  });\r\n  return alignStyle;\r\n};\r\nconst genJustifyContentStyle = token => {\r\n  const {\r\n    componentCls\r\n  } = token;\r\n  const justifyStyle = {};\r\n  justifyContentValues.forEach(value => {\r\n    justifyStyle[`${componentCls}-justify-${value}`] = {\r\n      justifyContent: value\r\n    };\r\n  });\r\n  return justifyStyle;\r\n};\r\nexport const prepareComponentToken = () => ({});\r\nexport default genStyleHooks('Flex', token => {\r\n  const {\r\n    paddingXS,\r\n    padding,\r\n    paddingLG\r\n  } = token;\r\n  const flexToken = mergeToken(token, {\r\n    flexGapSM: paddingXS,\r\n    flexGap: padding,\r\n    flexGapLG: paddingLG\r\n  });\r\n  return [genFlexStyle(flexToken), genFlexGapStyle(flexToken), genFlexWrapStyle(flexToken), genAlignItemsStyle(flexToken), genJustifyContentStyle(flexToken)];\r\n}, prepareComponentToken, {\r\n  // Flex component don't apply extra font style\r\n  // https://github.com/ant-design/ant-design/issues/46403\r\n  resetStyle: false\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}