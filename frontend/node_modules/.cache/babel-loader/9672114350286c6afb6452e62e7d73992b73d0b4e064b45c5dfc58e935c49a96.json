{"ast":null,"code":"// 格式化价格显示\nexport const formatPrice = price => {\n  if (price === null || price === undefined) return '--';\n  return `¥${price.toFixed(2)}`;\n};\n\n// 格式化百分比显示\nexport const formatPercent = percent => {\n  if (percent === null || percent === undefined) return '--';\n  const sign = percent > 0 ? '+' : '';\n  return `${sign}${percent.toFixed(2)}%`;\n};\n\n// 格式化数值显示\nexport const formatNumber = (num, decimals = 2) => {\n  if (num === null || num === undefined) return '--';\n  return num.toFixed(decimals);\n};\n\n// 格式化市值显示\nexport const formatMarketCap = marketCap => {\n  if (!marketCap) return '--';\n  return marketCap;\n};\n\n// 格式化时间显示\nexport const formatTime = timeStr => {\n  if (!timeStr) return '--';\n  try {\n    const date = new Date(timeStr);\n    return date.toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  } catch {\n    return timeStr;\n  }\n};\n\n// 获取涨跌颜色类名\nexport const getPriceColorClass = value => {\n  if (value === null || value === undefined || value === 0) return '';\n  return value > 0 ? 'positive' : 'negative';\n};\n\n// 获取涨跌颜色\nexport const getPriceColor = value => {\n  if (value === null || value === undefined || value === 0) return '#ffffff';\n  return value > 0 ? '#22c55e' : '#ef4444';\n};\n\n// 防抖函数\nexport const debounce = (func, wait) => {\n  let timeout;\n  return (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n// 节流函数\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return (...args) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// 计算价格差异\nexport const calculatePriceDiff = (theoretical, current) => {\n  if (theoretical === null || theoretical === undefined || current === null || current === undefined) {\n    return null;\n  }\n  return theoretical - current;\n};\n\n// 格式化价格差异显示\nexport const formatPriceDiff = (theoretical, current) => {\n  const diff = calculatePriceDiff(theoretical, current);\n  if (diff === null) return '--';\n  const sign = diff > 0 ? '+' : '';\n  return `${sign}${diff.toFixed(2)}`;\n};\n\n// 验证股票代码格式\nexport const isValidStockCode = code => {\n  return /^\\d{6}$/.test(code);\n};\n\n// 生成随机ID\nexport const generateId = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// 深拷贝对象\nexport const deepClone = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\n\n// 获取表格排序图标\nexport const getSortIcon = sortOrder => {\n  if (sortOrder === 'ascend') return '↑';\n  if (sortOrder === 'descend') return '↓';\n  return '';\n};\n\n// 处理API错误\nexport const handleApiError = error => {\n  var _error$response, _error$response$data, _error$response2, _error$response2$data;\n  if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n    return error.response.data.error;\n  }\n  if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n    return error.response.data.message;\n  }\n  if (error.message) {\n    return error.message;\n  }\n  return '请求失败，请稍后重试';\n};\n\n// 格式化股利支付率\nexport const formatDividendRatio = ratio => {\n  if (ratio === null || ratio === undefined) return '--';\n\n  // 如果是字符串且已经包含%，直接返回\n  if (typeof ratio === 'string') {\n    if (ratio.includes('%')) {\n      return ratio;\n    }\n    // 如果是字符串数字，转换为数字处理\n    const numRatio = parseFloat(ratio);\n    if (isNaN(numRatio)) return '--';\n    return `${numRatio.toFixed(1)}%`;\n  }\n\n  // 如果是数字，直接显示（后端已经是百分比格式）\n  return `${ratio.toFixed(1)}%`;\n};\n\n// 格式化ROE显示\nexport const formatROE = roe => {\n  if (roe === null || roe === undefined) return '--';\n\n  // 如果是字符串且已经包含%，直接返回\n  if (typeof roe === 'string') {\n    if (roe.includes('%')) {\n      return roe;\n    }\n    // 如果是字符串数字，转换为数字处理\n    const numROE = parseFloat(roe);\n    if (isNaN(numROE)) return '--';\n    return `${numROE.toFixed(2)}%`;\n  }\n\n  // 如果是数字，直接显示（后端已经是百分比格式）\n  return `${roe.toFixed(2)}%`;\n};\n\n// 获取优质股票标准\nexport const isQualityStock = (pe, roe) => {\n  return pe !== null && pe !== undefined && pe < 15 && roe !== null && roe !== undefined && roe > 15;\n};\n\n// 计算统计数据\nexport const calculateStats = stocks => {\n  if (!stocks || stocks.length === 0) {\n    return {\n      totalCount: 0,\n      avgPE: 0,\n      qualityCount: 0,\n      risingCount: 0,\n      fallingCount: 0,\n      avgROE: 0,\n      lastUpdate: new Date().toLocaleTimeString('zh-CN', {\n        hour12: false\n      })\n    };\n  }\n  const validPEs = stocks.map(s => s.pe_ratio_ttm).filter(pe => pe !== null && pe !== undefined && !isNaN(pe));\n  const avgPE = validPEs.length > 0 ? validPEs.reduce((sum, pe) => sum + pe, 0) / validPEs.length : 0;\n  const validROEs = stocks.map(s => s.roe).filter(roe => roe !== null && roe !== undefined && !isNaN(roe));\n  const avgROE = validROEs.length > 0 ? validROEs.reduce((sum, roe) => sum + roe, 0) / validROEs.length : 0;\n  const qualityCount = stocks.filter(stock => isQualityStock(stock.pe_ratio_ttm, stock.roe)).length;\n  const risingCount = stocks.filter(stock => stock.change_percent && stock.change_percent > 0).length;\n  const fallingCount = stocks.filter(stock => stock.change_percent && stock.change_percent < 0).length;\n  return {\n    totalCount: stocks.length,\n    avgPE: Number(avgPE.toFixed(1)),\n    avgROE: Number(avgROE.toFixed(1)),\n    qualityCount,\n    risingCount,\n    fallingCount,\n    lastUpdate: new Date().toLocaleTimeString('zh-CN', {\n      hour12: false\n    })\n  };\n};","map":{"version":3,"names":["formatPrice","price","undefined","toFixed","formatPercent","percent","sign","formatNumber","num","decimals","formatMarketCap","marketCap","formatTime","timeStr","date","Date","toLocaleString","year","month","day","hour","minute","getPriceColorClass","value","getPriceColor","debounce","func","wait","timeout","args","clearTimeout","setTimeout","throttle","limit","inThrottle","calculatePriceDiff","theoretical","current","formatPriceDiff","diff","isValidStockCode","code","test","generateId","Math","random","toString","substr","deepClone","obj","JSON","parse","stringify","getSortIcon","sortOrder","handleApiError","error","_error$response","_error$response$data","_error$response2","_error$response2$data","response","data","message","formatDividendRatio","ratio","includes","numRatio","parseFloat","isNaN","formatROE","roe","numROE","isQualityStock","pe","calculateStats","stocks","length","totalCount","avgPE","qualityCount","risingCount","fallingCount","avgROE","lastUpdate","toLocaleTimeString","hour12","validPEs","map","s","pe_ratio_ttm","filter","reduce","sum","validROEs","stock","change_percent","Number"],"sources":["E:/AICode/StockInsight/frontend/src/utils/helpers.ts"],"sourcesContent":["// 格式化价格显示\r\nexport const formatPrice = (price: number | null | undefined): string => {\r\n  if (price === null || price === undefined) return '--';\r\n  return `¥${price.toFixed(2)}`;\r\n};\r\n\r\n// 格式化百分比显示\r\nexport const formatPercent = (percent: number | null | undefined): string => {\r\n  if (percent === null || percent === undefined) return '--';\r\n  const sign = percent > 0 ? '+' : '';\r\n  return `${sign}${percent.toFixed(2)}%`;\r\n};\r\n\r\n// 格式化数值显示\r\nexport const formatNumber = (num: number | null | undefined, decimals: number = 2): string => {\r\n  if (num === null || num === undefined) return '--';\r\n  return num.toFixed(decimals);\r\n};\r\n\r\n// 格式化市值显示\r\nexport const formatMarketCap = (marketCap: string | null | undefined): string => {\r\n  if (!marketCap) return '--';\r\n  return marketCap;\r\n};\r\n\r\n// 格式化时间显示\r\nexport const formatTime = (timeStr: string | null | undefined): string => {\r\n  if (!timeStr) return '--';\r\n  try {\r\n    const date = new Date(timeStr);\r\n    return date.toLocaleString('zh-CN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  } catch {\r\n    return timeStr;\r\n  }\r\n};\r\n\r\n// 获取涨跌颜色类名\r\nexport const getPriceColorClass = (value: number | null | undefined): string => {\r\n  if (value === null || value === undefined || value === 0) return '';\r\n  return value > 0 ? 'positive' : 'negative';\r\n};\r\n\r\n// 获取涨跌颜色\r\nexport const getPriceColor = (value: number | null | undefined): string => {\r\n  if (value === null || value === undefined || value === 0) return '#ffffff';\r\n  return value > 0 ? '#22c55e' : '#ef4444';\r\n};\r\n\r\n// 防抖函数\r\nexport const debounce = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): ((...args: Parameters<T>) => void) => {\r\n  let timeout: NodeJS.Timeout;\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n};\r\n\r\n// 节流函数\r\nexport const throttle = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): ((...args: Parameters<T>) => void) => {\r\n  let inThrottle: boolean;\r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => (inThrottle = false), limit);\r\n    }\r\n  };\r\n};\r\n\r\n// 计算价格差异\r\nexport const calculatePriceDiff = (\r\n  theoretical: number | null | undefined,\r\n  current: number | null | undefined\r\n): number | null => {\r\n  if (theoretical === null || theoretical === undefined || \r\n      current === null || current === undefined) {\r\n    return null;\r\n  }\r\n  return theoretical - current;\r\n};\r\n\r\n// 格式化价格差异显示\r\nexport const formatPriceDiff = (\r\n  theoretical: number | null | undefined,\r\n  current: number | null | undefined\r\n): string => {\r\n  const diff = calculatePriceDiff(theoretical, current);\r\n  if (diff === null) return '--';\r\n  const sign = diff > 0 ? '+' : '';\r\n  return `${sign}${diff.toFixed(2)}`;\r\n};\r\n\r\n// 验证股票代码格式\r\nexport const isValidStockCode = (code: string): boolean => {\r\n  return /^\\d{6}$/.test(code);\r\n};\r\n\r\n// 生成随机ID\r\nexport const generateId = (): string => {\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\n// 深拷贝对象\r\nexport const deepClone = <T>(obj: T): T => {\r\n  return JSON.parse(JSON.stringify(obj));\r\n};\r\n\r\n// 获取表格排序图标\r\nexport const getSortIcon = (sortOrder: 'ascend' | 'descend' | null): string => {\r\n  if (sortOrder === 'ascend') return '↑';\r\n  if (sortOrder === 'descend') return '↓';\r\n  return '';\r\n};\r\n\r\n// 处理API错误\r\nexport const handleApiError = (error: any): string => {\r\n  if (error.response?.data?.error) {\r\n    return error.response.data.error;\r\n  }\r\n  if (error.response?.data?.message) {\r\n    return error.response.data.message;\r\n  }\r\n  if (error.message) {\r\n    return error.message;\r\n  }\r\n  return '请求失败，请稍后重试';\r\n};\r\n\r\n// 格式化股利支付率\r\nexport const formatDividendRatio = (ratio: number | string | null | undefined): string => {\r\n  if (ratio === null || ratio === undefined) return '--';\r\n  \r\n  // 如果是字符串且已经包含%，直接返回\r\n  if (typeof ratio === 'string') {\r\n    if (ratio.includes('%')) {\r\n      return ratio;\r\n    }\r\n    // 如果是字符串数字，转换为数字处理\r\n    const numRatio = parseFloat(ratio);\r\n    if (isNaN(numRatio)) return '--';\r\n    return `${numRatio.toFixed(1)}%`;\r\n  }\r\n  \r\n  // 如果是数字，直接显示（后端已经是百分比格式）\r\n  return `${ratio.toFixed(1)}%`;\r\n};\r\n\r\n// 格式化ROE显示\r\nexport const formatROE = (roe: number | string | null | undefined): string => {\r\n  if (roe === null || roe === undefined) return '--';\r\n  \r\n  // 如果是字符串且已经包含%，直接返回\r\n  if (typeof roe === 'string') {\r\n    if (roe.includes('%')) {\r\n      return roe;\r\n    }\r\n    // 如果是字符串数字，转换为数字处理\r\n    const numROE = parseFloat(roe);\r\n    if (isNaN(numROE)) return '--';\r\n    return `${numROE.toFixed(2)}%`;\r\n  }\r\n  \r\n  // 如果是数字，直接显示（后端已经是百分比格式）\r\n  return `${roe.toFixed(2)}%`;\r\n};\r\n\r\n// 获取优质股票标准\r\nexport const isQualityStock = (pe: number | null | undefined, roe: number | null | undefined): boolean => {\r\n  return (pe !== null && pe !== undefined && pe < 15) && \r\n         (roe !== null && roe !== undefined && roe > 15);\r\n};\r\n\r\n// 计算统计数据\r\nexport const calculateStats = (stocks: any[]) => {\r\n  if (!stocks || stocks.length === 0) {\r\n    return {\r\n      totalCount: 0,\r\n      avgPE: 0,\r\n      qualityCount: 0,\r\n      risingCount: 0,\r\n      fallingCount: 0,\r\n      avgROE: 0,\r\n      lastUpdate: new Date().toLocaleTimeString('zh-CN', { hour12: false })\r\n    };\r\n  }\r\n\r\n  const validPEs = stocks\r\n    .map(s => s.pe_ratio_ttm)\r\n    .filter(pe => pe !== null && pe !== undefined && !isNaN(pe));\r\n  \r\n  const avgPE = validPEs.length > 0 \r\n    ? validPEs.reduce((sum, pe) => sum + pe, 0) / validPEs.length \r\n    : 0;\r\n\r\n  const validROEs = stocks\r\n    .map(s => s.roe)\r\n    .filter(roe => roe !== null && roe !== undefined && !isNaN(roe));\r\n  \r\n  const avgROE = validROEs.length > 0 \r\n    ? validROEs.reduce((sum, roe) => sum + roe, 0) / validROEs.length \r\n    : 0;\r\n\r\n  const qualityCount = stocks.filter(stock => \r\n    isQualityStock(stock.pe_ratio_ttm, stock.roe)\r\n  ).length;\r\n\r\n  const risingCount = stocks.filter(stock => \r\n    stock.change_percent && stock.change_percent > 0\r\n  ).length;\r\n\r\n  const fallingCount = stocks.filter(stock => \r\n    stock.change_percent && stock.change_percent < 0\r\n  ).length;\r\n\r\n  return {\r\n    totalCount: stocks.length,\r\n    avgPE: Number(avgPE.toFixed(1)),\r\n    avgROE: Number(avgROE.toFixed(1)),\r\n    qualityCount,\r\n    risingCount,\r\n    fallingCount,\r\n    lastUpdate: new Date().toLocaleTimeString('zh-CN', { hour12: false })\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}