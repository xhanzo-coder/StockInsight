{"ast":null,"code":"var _jsxFileName = \"E:\\\\AICode\\\\StockInsight\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport DashboardLayout from './layouts/DashboardLayout';\nimport DashboardPage from './pages/DashboardPage';\nimport StyleDemo from './components/StyleDemo';\nimport './styles/global.css';\n\n/**\r\n * App组件 - 使用最简单的认证逻辑\r\n * 直接在App组件中管理登录状态，避免复杂的Context\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    console.log('=== App组件初始化 ===');\n\n    // 页面加载时检查token\n    const token = localStorage.getItem('userToken');\n    console.log('App初始化，检查token:', token);\n    console.log('token存在:', !!token);\n    console.log('token长度:', token ? token.length : 0);\n    if (token) {\n      setIsLoggedIn(true);\n      console.log('发现token，设置为已登录');\n    } else {\n      setIsLoggedIn(false);\n      console.log('没有token，设置为未登录');\n    }\n    setIsLoading(false);\n    console.log('App初始化完成，isLoading设置为false');\n    console.log('=== App组件初始化结束 ===');\n  }, []);\n\n  // 登录成功的回调函数\n  const handleLoginSuccess = token => {\n    console.log('=== 登录成功回调 ===');\n    console.log('接收到的token:', token);\n\n    // 保存token到localStorage\n    localStorage.setItem('userToken', token);\n    console.log('已保存token到localStorage');\n\n    // 验证token是否真的保存了\n    const savedToken = localStorage.getItem('userToken');\n    console.log('验证保存的token:', savedToken);\n    console.log('token保存成功:', savedToken === token);\n\n    // 更新登录状态\n    setIsLoggedIn(true);\n    console.log('已更新登录状态为true');\n    console.log('=== 登录成功回调结束 ===');\n  };\n\n  // 退出登录的回调函数\n  const handleLogout = () => {\n    console.log('=== 退出登录 ===');\n\n    // 清除token\n    localStorage.removeItem('userToken');\n    console.log('已清除localStorage中的token');\n\n    // 验证token是否真的清除了\n    const remainingToken = localStorage.getItem('userToken');\n    console.log('验证token是否清除:', remainingToken);\n    console.log('token清除成功:', remainingToken === null);\n\n    // 更新登录状态\n    setIsLoggedIn(false);\n    console.log('已更新登录状态为false');\n    console.log('=== 退出登录结束 ===');\n  };\n\n  // 页面刷新时的调试信息\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      console.log('=== 页面即将刷新 ===');\n      const currentToken = localStorage.getItem('userToken');\n      console.log('刷新前token状态:', currentToken);\n      console.log('刷新前登录状态:', isLoggedIn);\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isLoggedIn]);\n  if (isLoading) {\n    console.log('显示加载界面...');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        fontSize: '18px'\n      },\n      children: \"\\u6B63\\u5728\\u68C0\\u67E5\\u767B\\u5F55\\u72B6\\u6001...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  console.log('=== 渲染路由 ===');\n  console.log('当前登录状态:', isLoggedIn);\n  console.log('当前token:', localStorage.getItem('userToken'));\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isLoggedIn ? (() => {\n          console.log('已登录用户访问/login，重定向到/dashboard');\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/dashboard\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 24\n          }, this);\n        })() : (() => {\n          console.log('未登录用户访问/login，显示登录页面');\n          return /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 24\n          }, this);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isLoggedIn ? (() => {\n          console.log('已登录用户访问/dashboard，显示仪表盘');\n          return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n            onLogout: handleLogout,\n            children: /*#__PURE__*/_jsxDEV(DashboardPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this);\n        })() : (() => {\n          console.log('未登录用户访问/dashboard，重定向到/login');\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 24\n          }, this);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/style-demo\",\n        element: isLoggedIn ? (() => {\n          console.log('已登录用户访问/style-demo，显示样式演示');\n          return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n            onLogout: handleLogout,\n            children: /*#__PURE__*/_jsxDEV(StyleDemo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this);\n        })() : (() => {\n          console.log('未登录用户访问/style-demo，重定向到/login');\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 24\n          }, this);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: (() => {\n          console.log('访问根路径，当前登录状态:', isLoggedIn);\n          if (isLoggedIn) {\n            console.log('已登录，重定向到/dashboard');\n            return /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 24\n            }, this);\n          } else {\n            console.log('未登录，重定向到/login');\n            return /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 24\n            }, this);\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Dp1r1a/j0GkjqVYBCbeIVtVcEc4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","LoginPage","DashboardLayout","DashboardPage","StyleDemo","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","console","log","token","localStorage","getItem","length","handleLoginSuccess","setItem","savedToken","handleLogout","removeItem","remainingToken","handleBeforeUnload","currentToken","window","addEventListener","removeEventListener","style","display","justifyContent","alignItems","height","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","onLoginSuccess","onLogout","_c","$RefreshReg$"],"sources":["E:/AICode/StockInsight/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport LoginPage from './pages/LoginPage';\r\nimport DashboardLayout from './layouts/DashboardLayout';\r\nimport DashboardPage from './pages/DashboardPage';\r\nimport StyleDemo from './components/StyleDemo';\r\nimport './styles/global.css';\r\n\r\n/**\r\n * App组件 - 使用最简单的认证逻辑\r\n * 直接在App组件中管理登录状态，避免复杂的Context\r\n */\r\nconst App: React.FC = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log('=== App组件初始化 ===');\r\n    \r\n    // 页面加载时检查token\r\n    const token = localStorage.getItem('userToken');\r\n    console.log('App初始化，检查token:', token);\r\n    console.log('token存在:', !!token);\r\n    console.log('token长度:', token ? token.length : 0);\r\n    \r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      console.log('发现token，设置为已登录');\r\n    } else {\r\n      setIsLoggedIn(false);\r\n      console.log('没有token，设置为未登录');\r\n    }\r\n    \r\n    setIsLoading(false);\r\n    console.log('App初始化完成，isLoading设置为false');\r\n    console.log('=== App组件初始化结束 ===');\r\n  }, []);\r\n\r\n  // 登录成功的回调函数\r\n  const handleLoginSuccess = (token: string) => {\r\n    console.log('=== 登录成功回调 ===');\r\n    console.log('接收到的token:', token);\r\n    \r\n    // 保存token到localStorage\r\n    localStorage.setItem('userToken', token);\r\n    console.log('已保存token到localStorage');\r\n    \r\n    // 验证token是否真的保存了\r\n    const savedToken = localStorage.getItem('userToken');\r\n    console.log('验证保存的token:', savedToken);\r\n    console.log('token保存成功:', savedToken === token);\r\n    \r\n    // 更新登录状态\r\n    setIsLoggedIn(true);\r\n    console.log('已更新登录状态为true');\r\n    console.log('=== 登录成功回调结束 ===');\r\n  };\r\n\r\n  // 退出登录的回调函数\r\n  const handleLogout = () => {\r\n    console.log('=== 退出登录 ===');\r\n    \r\n    // 清除token\r\n    localStorage.removeItem('userToken');\r\n    console.log('已清除localStorage中的token');\r\n    \r\n    // 验证token是否真的清除了\r\n    const remainingToken = localStorage.getItem('userToken');\r\n    console.log('验证token是否清除:', remainingToken);\r\n    console.log('token清除成功:', remainingToken === null);\r\n    \r\n    // 更新登录状态\r\n    setIsLoggedIn(false);\r\n    console.log('已更新登录状态为false');\r\n    console.log('=== 退出登录结束 ===');\r\n  };\r\n\r\n  // 页面刷新时的调试信息\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      console.log('=== 页面即将刷新 ===');\r\n      const currentToken = localStorage.getItem('userToken');\r\n      console.log('刷新前token状态:', currentToken);\r\n      console.log('刷新前登录状态:', isLoggedIn);\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [isLoggedIn]);\r\n\r\n  if (isLoading) {\r\n    console.log('显示加载界面...');\r\n    return (\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        height: '100vh',\r\n        fontSize: '18px'\r\n      }}>\r\n        正在检查登录状态...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log('=== 渲染路由 ===');\r\n  console.log('当前登录状态:', isLoggedIn);\r\n  console.log('当前token:', localStorage.getItem('userToken'));\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route \r\n          path=\"/login\" \r\n          element={\r\n            isLoggedIn ? (\r\n              (() => {\r\n                console.log('已登录用户访问/login，重定向到/dashboard');\r\n                return <Navigate to=\"/dashboard\" replace />;\r\n              })()\r\n            ) : (\r\n              (() => {\r\n                console.log('未登录用户访问/login，显示登录页面');\r\n                return <LoginPage onLoginSuccess={handleLoginSuccess} />;\r\n              })()\r\n            )\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/dashboard\" \r\n          element={\r\n            isLoggedIn ? (\r\n              (() => {\r\n                console.log('已登录用户访问/dashboard，显示仪表盘');\r\n                return (\r\n                  <DashboardLayout onLogout={handleLogout}>\r\n                    <DashboardPage />\r\n                  </DashboardLayout>\r\n                );\r\n              })()\r\n            ) : (\r\n              (() => {\r\n                console.log('未登录用户访问/dashboard，重定向到/login');\r\n                return <Navigate to=\"/login\" replace />;\r\n              })()\r\n            )\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/style-demo\" \r\n          element={\r\n            isLoggedIn ? (\r\n              (() => {\r\n                console.log('已登录用户访问/style-demo，显示样式演示');\r\n                return (\r\n                  <DashboardLayout onLogout={handleLogout}>\r\n                    <StyleDemo />\r\n                  </DashboardLayout>\r\n                );\r\n              })()\r\n            ) : (\r\n              (() => {\r\n                console.log('未登录用户访问/style-demo，重定向到/login');\r\n                return <Navigate to=\"/login\" replace />;\r\n              })()\r\n            )\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/\" \r\n          element={\r\n            (() => {\r\n              console.log('访问根路径，当前登录状态:', isLoggedIn);\r\n              if (isLoggedIn) {\r\n                console.log('已登录，重定向到/dashboard');\r\n                return <Navigate to=\"/dashboard\" replace />;\r\n              } else {\r\n                console.log('未登录，重定向到/login');\r\n                return <Navigate to=\"/login\" replace />;\r\n              }\r\n            })()\r\n          } \r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}